
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMASMENOSleftPORENTRErightUMINUSCADENA CADENA_VALOR COMA ENTERO ENTRE FIN IDENTIF IGUAL IMPRIMIR INICIO LEER MAS MENOS NUMERO PARDE PARIZ POR PUNTO REALstart : INICIO PUNTO list_sentences FIN PUNTOlist_sentences   : list_sentences sentence_with_punto\n                        | sentence_with_puntosentence_with_punto  : sentence PUNTOsentence : ENTERO list_id\n                | CADENA list_id\n                | REAL list_id\n                | IMPRIMIR PARIZ list_arg PARDE\n                | LEER PARIZ list_id PARDE\n                | IDENTIF IGUAL expression\n                | IDENTIF IGUAL special_expression\n                | IDENTIF IGUAL CADENA_VALORlist_arg : list_arg COMA arg\n                | argarg  : IDENTIF\n            | expression\n            | special_expression\n            | CADENA_VALORoperator : MAS\n                | MENOS\n                | POR\n                | ENTRElist_id  : list_id COMA IDENTIF\n                | IDENTIFexpression   : expression operator expressionexpression   : PARIZ expression PARDEexpression   : IDENTIF\n                    | NUMEROexpression   : MENOS expression %prec UMINUSspecial_expression   : IDENTIF IDENTIF operator\n                            | NUMERO NUMERO operator\n                            | NUMERO IDENTIF operator\n                            | IDENTIF NUMERO operator'
    
_lr_action_items = {'INICIO':([0,],[2,]),'$end':([1,23,],[0,-1,]),'PUNTO':([2,6,13,16,17,18,19,32,35,36,37,38,39,41,42,43,48,49,50,51,54,55,56,58,59,60,61,62,],[3,15,23,-5,-24,-6,-7,-28,-27,-10,-11,-12,-23,-27,-28,-8,-19,-20,-21,-22,-29,-9,-26,-30,-33,-25,-31,-32,]),'ENTERO':([3,4,5,14,15,],[7,7,-3,-2,-4,]),'CADENA':([3,4,5,14,15,],[8,8,-3,-2,-4,]),'REAL':([3,4,5,14,15,],[9,9,-3,-2,-4,]),'IMPRIMIR':([3,4,5,14,15,],[10,10,-3,-2,-4,]),'LEER':([3,4,5,14,15,],[11,11,-3,-2,-4,]),'IDENTIF':([3,4,5,7,8,9,14,15,20,21,22,24,25,28,32,33,35,44,47,48,49,50,51,],[12,12,-3,17,17,17,-2,-4,28,17,35,39,41,45,53,41,45,28,41,-19,-20,-21,-22,]),'FIN':([4,5,14,15,],[13,-3,-2,-4,]),'PARIZ':([10,11,20,22,25,33,44,47,48,49,50,51,],[20,21,25,25,25,25,25,25,-19,-20,-21,-22,]),'IGUAL':([12,],[22,]),'COMA':([16,17,18,19,26,27,28,29,30,31,32,34,39,41,42,48,49,50,51,54,56,57,58,59,60,61,62,],[24,-24,24,24,44,-14,-15,-16,-17,-18,-28,24,-23,-27,-28,-19,-20,-21,-22,-29,-26,-13,-30,-33,-25,-31,-32,]),'PARDE':([17,26,27,28,29,30,31,32,34,39,40,41,42,48,49,50,51,54,56,57,58,59,60,61,62,],[-24,43,-14,-15,-16,-17,-18,-28,55,-23,56,-27,-28,-19,-20,-21,-22,-29,-26,-13,-30,-33,-25,-31,-32,]),'CADENA_VALOR':([20,22,44,],[31,38,31,]),'NUMERO':([20,22,25,28,32,33,35,44,47,48,49,50,51,],[32,32,42,46,52,42,46,32,42,-19,-20,-21,-22,]),'MENOS':([20,22,25,28,29,32,33,35,36,40,41,42,44,45,46,47,48,49,50,51,52,53,54,56,60,],[33,33,33,-27,49,-28,33,-27,49,49,-27,-28,33,49,49,33,-19,-20,-21,-22,49,49,-29,-26,49,]),'MAS':([28,29,32,35,36,40,41,42,45,46,52,53,54,56,60,],[-27,48,-28,-27,48,48,-27,-28,48,48,48,48,-29,-26,48,]),'POR':([28,29,32,35,36,40,41,42,45,46,52,53,54,56,60,],[-27,50,-28,-27,50,50,-27,-28,50,50,50,50,-29,-26,50,]),'ENTRE':([28,29,32,35,36,40,41,42,45,46,52,53,54,56,60,],[-27,51,-28,-27,51,51,-27,-28,51,51,51,51,-29,-26,51,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'list_sentences':([3,],[4,]),'sentence_with_punto':([3,4,],[5,14,]),'sentence':([3,4,],[6,6,]),'list_id':([7,8,9,21,],[16,18,19,34,]),'list_arg':([20,],[26,]),'arg':([20,44,],[27,57,]),'expression':([20,22,25,33,44,47,],[29,36,40,54,29,60,]),'special_expression':([20,22,44,],[30,37,30,]),'operator':([29,36,40,45,46,52,53,54,60,],[47,47,47,58,59,61,62,47,47,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> INICIO PUNTO list_sentences FIN PUNTO','start',5,'p_start','Parser.py',11),
  ('list_sentences -> list_sentences sentence_with_punto','list_sentences',2,'p_list_sentences','Parser.py',14),
  ('list_sentences -> sentence_with_punto','list_sentences',1,'p_list_sentences','Parser.py',15),
  ('sentence_with_punto -> sentence PUNTO','sentence_with_punto',2,'p_sentence_with_pluto','Parser.py',18),
  ('sentence -> ENTERO list_id','sentence',2,'p_sentence','Parser.py',21),
  ('sentence -> CADENA list_id','sentence',2,'p_sentence','Parser.py',22),
  ('sentence -> REAL list_id','sentence',2,'p_sentence','Parser.py',23),
  ('sentence -> IMPRIMIR PARIZ list_arg PARDE','sentence',4,'p_sentence','Parser.py',24),
  ('sentence -> LEER PARIZ list_id PARDE','sentence',4,'p_sentence','Parser.py',25),
  ('sentence -> IDENTIF IGUAL expression','sentence',3,'p_sentence','Parser.py',26),
  ('sentence -> IDENTIF IGUAL special_expression','sentence',3,'p_sentence','Parser.py',27),
  ('sentence -> IDENTIF IGUAL CADENA_VALOR','sentence',3,'p_sentence','Parser.py',28),
  ('list_arg -> list_arg COMA arg','list_arg',3,'p_list_arg','Parser.py',31),
  ('list_arg -> arg','list_arg',1,'p_list_arg','Parser.py',32),
  ('arg -> IDENTIF','arg',1,'p_arg','Parser.py',35),
  ('arg -> expression','arg',1,'p_arg','Parser.py',36),
  ('arg -> special_expression','arg',1,'p_arg','Parser.py',37),
  ('arg -> CADENA_VALOR','arg',1,'p_arg','Parser.py',38),
  ('operator -> MAS','operator',1,'p_operator','Parser.py',41),
  ('operator -> MENOS','operator',1,'p_operator','Parser.py',42),
  ('operator -> POR','operator',1,'p_operator','Parser.py',43),
  ('operator -> ENTRE','operator',1,'p_operator','Parser.py',44),
  ('list_id -> list_id COMA IDENTIF','list_id',3,'p_list_id','Parser.py',47),
  ('list_id -> IDENTIF','list_id',1,'p_list_id','Parser.py',48),
  ('expression -> expression operator expression','expression',3,'p_expression_operator','Parser.py',51),
  ('expression -> PARIZ expression PARDE','expression',3,'p_expression_parens','Parser.py',54),
  ('expression -> IDENTIF','expression',1,'p_expression_num_id','Parser.py',57),
  ('expression -> NUMERO','expression',1,'p_expression_num_id','Parser.py',58),
  ('expression -> MENOS expression','expression',2,'p_expression_uminus','Parser.py',61),
  ('special_expression -> IDENTIF IDENTIF operator','special_expression',3,'p_special_expression','Parser.py',64),
  ('special_expression -> NUMERO NUMERO operator','special_expression',3,'p_special_expression','Parser.py',65),
  ('special_expression -> NUMERO IDENTIF operator','special_expression',3,'p_special_expression','Parser.py',66),
  ('special_expression -> IDENTIF NUMERO operator','special_expression',3,'p_special_expression','Parser.py',67),
]
