
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMASMENOSleftPORENTREABRE_RPN BOOLEANO CADENA CADENA_VALOR CIERRA_RPN CIERTO COMA CUANDO DIFIERE ENTERO ENTONCES ENTRE EQUIVALE FALSO FIN IDENTIF IDENTIF_ILEGAL IGUAL IMPRIMIR INICIO LEER LISTO MAS MAYORQUE MAYOR_IGUAL MENORQUE MENOR_IGUAL MENOS MIENTRAS NO NUMERO O PARDE PARIZ POR PUNTO REAL SINO Yexpression   : PARIZ expression PARDE\n                    expression   : expression MAS expression\n                    | expression MENOS expression\n                    | expression POR expression\n                    | expression ENTRE expression\n                    | valueexpression   : ABRE_RPN special_expression CIERRA_RPNspecial_expression   : special_expression special_expression MAS\n                            | special_expression special_expression MENOS\n                            | special_expression special_expression POR\n                            | special_expression special_expression ENTRE\n                            | valuevalue   : IDENTIF\n                | NUMERO'
    
_lr_action_items = {'PARIZ':([0,2,7,8,9,10,],[2,2,2,2,2,2,]),'ABRE_RPN':([0,2,7,8,9,10,],[4,4,4,4,4,4,]),'IDENTIF':([0,2,4,5,6,7,8,9,10,12,13,19,21,22,23,24,],[5,5,5,-13,-14,5,5,5,5,5,-12,5,-8,-9,-10,-11,]),'NUMERO':([0,2,4,5,6,7,8,9,10,12,13,19,21,22,23,24,],[6,6,6,-13,-14,6,6,6,6,6,-12,6,-8,-9,-10,-11,]),'$end':([1,3,5,6,14,15,16,17,18,20,],[0,-6,-13,-14,-2,-3,-4,-5,-1,-7,]),'MAS':([1,3,5,6,11,13,14,15,16,17,18,19,20,21,22,23,24,],[7,-6,-13,-14,7,-12,-2,-3,-4,-5,-1,21,-7,-8,-9,-10,-11,]),'MENOS':([1,3,5,6,11,13,14,15,16,17,18,19,20,21,22,23,24,],[8,-6,-13,-14,8,-12,-2,-3,-4,-5,-1,22,-7,-8,-9,-10,-11,]),'POR':([1,3,5,6,11,13,14,15,16,17,18,19,20,21,22,23,24,],[9,-6,-13,-14,9,-12,9,9,-4,-5,-1,23,-7,-8,-9,-10,-11,]),'ENTRE':([1,3,5,6,11,13,14,15,16,17,18,19,20,21,22,23,24,],[10,-6,-13,-14,10,-12,10,10,-4,-5,-1,24,-7,-8,-9,-10,-11,]),'PARDE':([3,5,6,11,14,15,16,17,18,20,],[-6,-13,-14,18,-2,-3,-4,-5,-1,-7,]),'CIERRA_RPN':([5,6,12,13,21,22,23,24,],[-13,-14,20,-12,-8,-9,-10,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,7,8,9,10,],[1,11,14,15,16,17,]),'value':([0,2,4,7,8,9,10,12,19,],[3,3,13,3,3,3,3,13,13,]),'special_expression':([4,12,19,],[12,19,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> PARIZ expression PARDE','expression',3,'p_group_expression','simplified_parser.py',11),
  ('expression -> expression MAS expression','expression',3,'p_expression','simplified_parser.py',16),
  ('expression -> expression MENOS expression','expression',3,'p_expression','simplified_parser.py',17),
  ('expression -> expression POR expression','expression',3,'p_expression','simplified_parser.py',18),
  ('expression -> expression ENTRE expression','expression',3,'p_expression','simplified_parser.py',19),
  ('expression -> value','expression',1,'p_expression','simplified_parser.py',20),
  ('expression -> ABRE_RPN special_expression CIERRA_RPN','expression',3,'p_rpn_group_expression','simplified_parser.py',25),
  ('special_expression -> special_expression special_expression MAS','special_expression',3,'p_special_expression','simplified_parser.py',28),
  ('special_expression -> special_expression special_expression MENOS','special_expression',3,'p_special_expression','simplified_parser.py',29),
  ('special_expression -> special_expression special_expression POR','special_expression',3,'p_special_expression','simplified_parser.py',30),
  ('special_expression -> special_expression special_expression ENTRE','special_expression',3,'p_special_expression','simplified_parser.py',31),
  ('special_expression -> value','special_expression',1,'p_special_expression','simplified_parser.py',32),
  ('value -> IDENTIF','value',1,'p_value','simplified_parser.py',35),
  ('value -> NUMERO','value',1,'p_value','simplified_parser.py',36),
]
