
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightNOleftOleftYleftEQUIVALEDIFIEREleftMAYORQUEMENORQUEMAYOR_IGUALMENOR_IGUALleftMASMENOSleftPORENTRErightUMINUSABRE_RPN BOOLEANO CADENA CADENA_VALOR CIERRA_RPN CIERTO COMA CUANDO DIFIERE ENTERO ENTONCES ENTRE EQUIVALE FALSO FIN IDENTIF IGUAL IMPRIMIR INICIO LEER LISTO MAS MAYORQUE MAYOR_IGUAL MENORQUE MENOR_IGUAL MENOS MIENTRAS NO NUMERO O PARDE PARIZ POR PUNTO REAL SINO Ystart : INICIO PUNTO list_sentences FIN PUNTOlist_sentences   : \n                        | list_sentences sentence\n                        | sentencesentence : datatype list_id PUNTO\n                | control_statement PUNTO\n                | assignment_statement PUNTO\n                | system_function_call_statement PUNTOlist_id  : list_id COMA IDENTIF\n                | IDENTIFcontrol_statement    : if_statement\n                            | while_statementif_statement : CUANDO expression ENTONCES list_sentences LISTO\n                    | CUANDO expression ENTONCES list_sentences SINO list_sentences LISTOwhile_statement : MIENTRAS expression ENTONCES list_sentences LISTOassignment_statement : IDENTIF IGUAL expression\n                            | IDENTIF IGUAL special_expression\n                            | IDENTIF IGUAL CADENA_VALORsystem_function_call_statement   : IMPRIMIR PARIZ list_arg PARDE\n                                        | LEER PARIZ list_id PARDElist_arg : list_arg COMA arg\n                | argarg  : IDENTIF\n            | expression\n            | CADENA_VALORoperator : arithmetic_operator\n                | logic_operator\n                | relational_operator\n                | equality_operatorarithmetic_operator  : MAS\n                            | MENOS\n                            | POR\n                            | ENTRElogic_operator   : O\n                        | Y\n                        | NOrelational_operator  : MAYORQUE\n                            | MENORQUE\n                            | MAYOR_IGUAL\n                            | MENOR_IGUALequality_operator  : EQUIVALE\n                            | DIFIEREdatatype : ENTERO\n                | CADENA\n                | REAL\n                | BOOLEANOexpression   : expression operator expression\n                    | PARIZ expression PARDE\n                    | NO expression\n                    | ABRE_RPN special_expression CIERRA_RPN\n                    | IDENTIF\n                    | NUMERO\n                    | boolean_valueboolean_value    : CIERTO\n                        | FALSOexpression : MENOS expression %prec UMINUSspecial_expression   : IDENTIF IDENTIF operator\n                            | NUMERO NUMERO operator\n                            | NUMERO IDENTIF operator\n                            | IDENTIF NUMERO operator'
    
_lr_action_items = {'INICIO':([0,],[2,]),'$end':([1,42,],[0,-1,]),'PUNTO':([2,7,8,9,14,15,21,23,24,35,36,37,39,40,45,46,47,48,49,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,80,82,87,89,91,92,93,95,96,97,98,100,102,104,],[3,25,26,27,-11,-12,42,43,-10,-51,-52,-53,-54,-55,-51,-16,-17,-18,-52,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-49,-56,-9,-19,-20,-47,-48,-50,-57,-60,-58,-59,-13,-15,-14,]),'FIN':([3,4,5,22,25,26,27,43,],[-2,21,-4,-3,-6,-7,-8,-5,]),'ENTERO':([3,4,5,22,25,26,27,43,56,81,90,94,101,103,],[10,10,-4,-3,-6,-7,-8,-5,10,10,10,10,10,10,]),'CADENA':([3,4,5,22,25,26,27,43,56,81,90,94,101,103,],[11,11,-4,-3,-6,-7,-8,-5,11,11,11,11,11,11,]),'REAL':([3,4,5,22,25,26,27,43,56,81,90,94,101,103,],[12,12,-4,-3,-6,-7,-8,-5,12,12,12,12,12,12,]),'BOOLEANO':([3,4,5,22,25,26,27,43,56,81,90,94,101,103,],[13,13,-4,-3,-6,-7,-8,-5,13,13,13,13,13,13,]),'IDENTIF':([3,4,5,6,10,11,12,13,19,20,22,25,26,27,28,29,30,32,33,34,38,43,44,45,49,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,81,88,90,94,101,103,],[16,16,-4,24,-43,-44,-45,-46,35,35,-3,-6,-7,-8,45,52,24,35,35,78,35,-5,82,83,86,16,35,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,83,86,16,52,16,16,16,16,]),'IMPRIMIR':([3,4,5,22,25,26,27,43,56,81,90,94,101,103,],[17,17,-4,-3,-6,-7,-8,-5,17,17,17,17,17,17,]),'LEER':([3,4,5,22,25,26,27,43,56,81,90,94,101,103,],[18,18,-4,-3,-6,-7,-8,-5,18,18,18,18,18,18,]),'CUANDO':([3,4,5,22,25,26,27,43,56,81,90,94,101,103,],[19,19,-4,-3,-6,-7,-8,-5,19,19,19,19,19,19,]),'MIENTRAS':([3,4,5,22,25,26,27,43,56,81,90,94,101,103,],[20,20,-4,-3,-6,-7,-8,-5,20,20,20,20,20,20,]),'LISTO':([5,22,25,26,27,43,56,81,90,94,101,103,],[-4,-3,-6,-7,-8,-5,-2,-2,100,102,-2,104,]),'SINO':([5,22,25,26,27,43,56,90,],[-4,-3,-6,-7,-8,-5,-2,101,]),'IGUAL':([16,],[28,]),'PARIZ':([17,18,19,20,28,29,32,33,38,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,88,],[29,30,32,32,32,32,32,32,32,32,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,32,]),'NO':([19,20,28,29,31,32,33,35,36,37,38,39,40,41,45,46,49,52,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,83,84,85,86,88,91,92,93,],[33,33,33,33,68,33,33,-51,-52,-53,33,-54,-55,68,-51,68,-52,-51,68,33,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,68,68,-56,68,68,68,68,33,68,-48,-50,]),'ABRE_RPN':([19,20,28,29,32,33,38,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,88,],[34,34,34,34,34,34,34,34,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,34,]),'NUMERO':([19,20,28,29,32,33,34,38,45,49,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,88,],[36,36,49,36,36,36,79,36,84,85,36,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,84,85,36,]),'MENOS':([19,20,28,29,31,32,33,35,36,37,38,39,40,41,45,46,49,52,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,83,84,85,86,88,91,92,93,],[38,38,38,38,63,38,38,-51,-52,-53,38,-54,-55,63,-51,63,-52,-51,63,38,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,63,63,-56,63,63,63,63,38,63,-48,-50,]),'CIERTO':([19,20,28,29,32,33,38,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,88,],[39,39,39,39,39,39,39,39,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,39,]),'FALSO':([19,20,28,29,32,33,38,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,88,],[40,40,40,40,40,40,40,40,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,40,]),'COMA':([23,24,35,36,37,39,40,50,51,52,53,54,55,76,80,82,91,92,93,99,],[44,-10,-51,-52,-53,-54,-55,88,-22,-23,-24,-25,44,-49,-56,-9,-47,-48,-50,-21,]),'PARDE':([24,35,36,37,39,40,50,51,52,53,54,55,75,76,80,82,91,92,93,99,],[-10,-51,-52,-53,-54,-55,87,-22,-23,-24,-25,89,92,-49,-56,-9,-47,-48,-50,-21,]),'CADENA_VALOR':([28,29,88,],[48,54,54,]),'ENTONCES':([31,35,36,37,39,40,41,76,80,91,92,93,],[56,-51,-52,-53,-54,-55,81,-49,-56,-47,-48,-50,]),'MAS':([31,35,36,37,39,40,41,45,46,49,52,53,75,76,80,83,84,85,86,91,92,93,],[62,-51,-52,-53,-54,-55,62,-51,62,-52,-51,62,62,62,-56,62,62,62,62,62,-48,-50,]),'POR':([31,35,36,37,39,40,41,45,46,49,52,53,75,76,80,83,84,85,86,91,92,93,],[64,-51,-52,-53,-54,-55,64,-51,64,-52,-51,64,64,64,-56,64,64,64,64,64,-48,-50,]),'ENTRE':([31,35,36,37,39,40,41,45,46,49,52,53,75,76,80,83,84,85,86,91,92,93,],[65,-51,-52,-53,-54,-55,65,-51,65,-52,-51,65,65,65,-56,65,65,65,65,65,-48,-50,]),'O':([31,35,36,37,39,40,41,45,46,49,52,53,75,76,80,83,84,85,86,91,92,93,],[66,-51,-52,-53,-54,-55,66,-51,66,-52,-51,66,66,66,-56,66,66,66,66,66,-48,-50,]),'Y':([31,35,36,37,39,40,41,45,46,49,52,53,75,76,80,83,84,85,86,91,92,93,],[67,-51,-52,-53,-54,-55,67,-51,67,-52,-51,67,67,67,-56,67,67,67,67,67,-48,-50,]),'MAYORQUE':([31,35,36,37,39,40,41,45,46,49,52,53,75,76,80,83,84,85,86,91,92,93,],[69,-51,-52,-53,-54,-55,69,-51,69,-52,-51,69,69,69,-56,69,69,69,69,69,-48,-50,]),'MENORQUE':([31,35,36,37,39,40,41,45,46,49,52,53,75,76,80,83,84,85,86,91,92,93,],[70,-51,-52,-53,-54,-55,70,-51,70,-52,-51,70,70,70,-56,70,70,70,70,70,-48,-50,]),'MAYOR_IGUAL':([31,35,36,37,39,40,41,45,46,49,52,53,75,76,80,83,84,85,86,91,92,93,],[71,-51,-52,-53,-54,-55,71,-51,71,-52,-51,71,71,71,-56,71,71,71,71,71,-48,-50,]),'MENOR_IGUAL':([31,35,36,37,39,40,41,45,46,49,52,53,75,76,80,83,84,85,86,91,92,93,],[72,-51,-52,-53,-54,-55,72,-51,72,-52,-51,72,72,72,-56,72,72,72,72,72,-48,-50,]),'EQUIVALE':([31,35,36,37,39,40,41,45,46,49,52,53,75,76,80,83,84,85,86,91,92,93,],[73,-51,-52,-53,-54,-55,73,-51,73,-52,-51,73,73,73,-56,73,73,73,73,73,-48,-50,]),'DIFIERE':([31,35,36,37,39,40,41,45,46,49,52,53,75,76,80,83,84,85,86,91,92,93,],[74,-51,-52,-53,-54,-55,74,-51,74,-52,-51,74,74,74,-56,74,74,74,74,74,-48,-50,]),'CIERRA_RPN':([58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,95,96,97,98,],[-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,93,-57,-60,-58,-59,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'list_sentences':([3,56,81,101,],[4,90,94,103,]),'sentence':([3,4,56,81,90,94,101,103,],[5,22,5,5,22,22,5,22,]),'datatype':([3,4,56,81,90,94,101,103,],[6,6,6,6,6,6,6,6,]),'control_statement':([3,4,56,81,90,94,101,103,],[7,7,7,7,7,7,7,7,]),'assignment_statement':([3,4,56,81,90,94,101,103,],[8,8,8,8,8,8,8,8,]),'system_function_call_statement':([3,4,56,81,90,94,101,103,],[9,9,9,9,9,9,9,9,]),'if_statement':([3,4,56,81,90,94,101,103,],[14,14,14,14,14,14,14,14,]),'while_statement':([3,4,56,81,90,94,101,103,],[15,15,15,15,15,15,15,15,]),'list_id':([6,30,],[23,55,]),'expression':([19,20,28,29,32,33,38,57,88,],[31,41,46,53,75,76,80,91,53,]),'boolean_value':([19,20,28,29,32,33,38,57,88,],[37,37,37,37,37,37,37,37,37,]),'special_expression':([28,34,],[47,77,]),'list_arg':([29,],[50,]),'arg':([29,88,],[51,99,]),'operator':([31,41,46,53,75,76,80,83,84,85,86,91,],[57,57,57,57,57,57,57,95,96,97,98,57,]),'arithmetic_operator':([31,41,46,53,75,76,80,83,84,85,86,91,],[58,58,58,58,58,58,58,58,58,58,58,58,]),'logic_operator':([31,41,46,53,75,76,80,83,84,85,86,91,],[59,59,59,59,59,59,59,59,59,59,59,59,]),'relational_operator':([31,41,46,53,75,76,80,83,84,85,86,91,],[60,60,60,60,60,60,60,60,60,60,60,60,]),'equality_operator':([31,41,46,53,75,76,80,83,84,85,86,91,],[61,61,61,61,61,61,61,61,61,61,61,61,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> INICIO PUNTO list_sentences FIN PUNTO','start',5,'p_start','parser.py',18),
  ('list_sentences -> <empty>','list_sentences',0,'p_list_sentences','parser.py',22),
  ('list_sentences -> list_sentences sentence','list_sentences',2,'p_list_sentences','parser.py',23),
  ('list_sentences -> sentence','list_sentences',1,'p_list_sentences','parser.py',24),
  ('sentence -> datatype list_id PUNTO','sentence',3,'p_sentence','parser.py',28),
  ('sentence -> control_statement PUNTO','sentence',2,'p_sentence','parser.py',29),
  ('sentence -> assignment_statement PUNTO','sentence',2,'p_sentence','parser.py',30),
  ('sentence -> system_function_call_statement PUNTO','sentence',2,'p_sentence','parser.py',31),
  ('list_id -> list_id COMA IDENTIF','list_id',3,'p_list_id','parser.py',35),
  ('list_id -> IDENTIF','list_id',1,'p_list_id','parser.py',36),
  ('control_statement -> if_statement','control_statement',1,'p_control_statement','parser.py',40),
  ('control_statement -> while_statement','control_statement',1,'p_control_statement','parser.py',41),
  ('if_statement -> CUANDO expression ENTONCES list_sentences LISTO','if_statement',5,'p_if_statement','parser.py',44),
  ('if_statement -> CUANDO expression ENTONCES list_sentences SINO list_sentences LISTO','if_statement',7,'p_if_statement','parser.py',45),
  ('while_statement -> MIENTRAS expression ENTONCES list_sentences LISTO','while_statement',5,'p_while_statement','parser.py',48),
  ('assignment_statement -> IDENTIF IGUAL expression','assignment_statement',3,'p_assignment_statement','parser.py',52),
  ('assignment_statement -> IDENTIF IGUAL special_expression','assignment_statement',3,'p_assignment_statement','parser.py',53),
  ('assignment_statement -> IDENTIF IGUAL CADENA_VALOR','assignment_statement',3,'p_assignment_statement','parser.py',54),
  ('system_function_call_statement -> IMPRIMIR PARIZ list_arg PARDE','system_function_call_statement',4,'p_system_function_call_statement','parser.py',58),
  ('system_function_call_statement -> LEER PARIZ list_id PARDE','system_function_call_statement',4,'p_system_function_call_statement','parser.py',59),
  ('list_arg -> list_arg COMA arg','list_arg',3,'p_list_arg','parser.py',63),
  ('list_arg -> arg','list_arg',1,'p_list_arg','parser.py',64),
  ('arg -> IDENTIF','arg',1,'p_arg','parser.py',68),
  ('arg -> expression','arg',1,'p_arg','parser.py',69),
  ('arg -> CADENA_VALOR','arg',1,'p_arg','parser.py',70),
  ('operator -> arithmetic_operator','operator',1,'p_operator','parser.py',73),
  ('operator -> logic_operator','operator',1,'p_operator','parser.py',74),
  ('operator -> relational_operator','operator',1,'p_operator','parser.py',75),
  ('operator -> equality_operator','operator',1,'p_operator','parser.py',76),
  ('arithmetic_operator -> MAS','arithmetic_operator',1,'p_arithmetic_operator','parser.py',80),
  ('arithmetic_operator -> MENOS','arithmetic_operator',1,'p_arithmetic_operator','parser.py',81),
  ('arithmetic_operator -> POR','arithmetic_operator',1,'p_arithmetic_operator','parser.py',82),
  ('arithmetic_operator -> ENTRE','arithmetic_operator',1,'p_arithmetic_operator','parser.py',83),
  ('logic_operator -> O','logic_operator',1,'p_logic_operator','parser.py',86),
  ('logic_operator -> Y','logic_operator',1,'p_logic_operator','parser.py',87),
  ('logic_operator -> NO','logic_operator',1,'p_logic_operator','parser.py',88),
  ('relational_operator -> MAYORQUE','relational_operator',1,'p_relational_operator','parser.py',91),
  ('relational_operator -> MENORQUE','relational_operator',1,'p_relational_operator','parser.py',92),
  ('relational_operator -> MAYOR_IGUAL','relational_operator',1,'p_relational_operator','parser.py',93),
  ('relational_operator -> MENOR_IGUAL','relational_operator',1,'p_relational_operator','parser.py',94),
  ('equality_operator -> EQUIVALE','equality_operator',1,'p_equality_operator','parser.py',97),
  ('equality_operator -> DIFIERE','equality_operator',1,'p_equality_operator','parser.py',98),
  ('datatype -> ENTERO','datatype',1,'p_datatype','parser.py',102),
  ('datatype -> CADENA','datatype',1,'p_datatype','parser.py',103),
  ('datatype -> REAL','datatype',1,'p_datatype','parser.py',104),
  ('datatype -> BOOLEANO','datatype',1,'p_datatype','parser.py',105),
  ('expression -> expression operator expression','expression',3,'p_expression','parser.py',109),
  ('expression -> PARIZ expression PARDE','expression',3,'p_expression','parser.py',110),
  ('expression -> NO expression','expression',2,'p_expression','parser.py',111),
  ('expression -> ABRE_RPN special_expression CIERRA_RPN','expression',3,'p_expression','parser.py',112),
  ('expression -> IDENTIF','expression',1,'p_expression','parser.py',113),
  ('expression -> NUMERO','expression',1,'p_expression','parser.py',114),
  ('expression -> boolean_value','expression',1,'p_expression','parser.py',115),
  ('boolean_value -> CIERTO','boolean_value',1,'p_boolean_value','parser.py',118),
  ('boolean_value -> FALSO','boolean_value',1,'p_boolean_value','parser.py',119),
  ('expression -> MENOS expression','expression',2,'p_expression_uminus','parser.py',122),
  ('special_expression -> IDENTIF IDENTIF operator','special_expression',3,'p_special_expression','parser.py',126),
  ('special_expression -> NUMERO NUMERO operator','special_expression',3,'p_special_expression','parser.py',127),
  ('special_expression -> NUMERO IDENTIF operator','special_expression',3,'p_special_expression','parser.py',128),
  ('special_expression -> IDENTIF NUMERO operator','special_expression',3,'p_special_expression','parser.py',129),
]
