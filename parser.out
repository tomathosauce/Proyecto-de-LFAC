Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> INICIO PUNTO list_sentences FIN PUNTO
Rule 2     list_sentences -> <empty>
Rule 3     list_sentences -> list_sentences sentence
Rule 4     list_sentences -> sentence
Rule 5     sentence -> datatype list_id PUNTO
Rule 6     sentence -> control_statement PUNTO
Rule 7     sentence -> assignment_statement PUNTO
Rule 8     sentence -> system_function_call_statement PUNTO
Rule 9     list_id -> list_id COMA IDENTIF
Rule 10    list_id -> IDENTIF
Rule 11    control_statement -> if_statement
Rule 12    control_statement -> while_statement
Rule 13    if_statement -> CUANDO expression ENTONCES list_sentences LISTO
Rule 14    if_statement -> CUANDO expression ENTONCES list_sentences SINO list_sentences LISTO
Rule 15    while_statement -> MIENTRAS expression ENTONCES list_sentences LISTO
Rule 16    assignment_statement -> IDENTIF IGUAL expression
Rule 17    assignment_statement -> IDENTIF IGUAL special_expression
Rule 18    assignment_statement -> IDENTIF IGUAL CADENA_VALOR
Rule 19    system_function_call_statement -> IMPRIMIR PARIZ list_arg PARDE
Rule 20    system_function_call_statement -> LEER PARIZ list_id PARDE
Rule 21    list_arg -> list_arg COMA arg
Rule 22    list_arg -> arg
Rule 23    arg -> IDENTIF
Rule 24    arg -> expression
Rule 25    arg -> CADENA_VALOR
Rule 26    operator -> arithmetic_operator
Rule 27    operator -> logic_operator
Rule 28    operator -> relational_operator
Rule 29    operator -> equality_operator
Rule 30    arithmetic_operator -> MAS
Rule 31    arithmetic_operator -> MENOS
Rule 32    arithmetic_operator -> POR
Rule 33    arithmetic_operator -> ENTRE
Rule 34    logic_operator -> O
Rule 35    logic_operator -> Y
Rule 36    logic_operator -> NO
Rule 37    relational_operator -> MAYORQUE
Rule 38    relational_operator -> MENORQUE
Rule 39    relational_operator -> MAYOR_IGUAL
Rule 40    relational_operator -> MENOR_IGUAL
Rule 41    equality_operator -> EQUIVALE
Rule 42    equality_operator -> DIFIERE
Rule 43    datatype -> ENTERO
Rule 44    datatype -> CADENA
Rule 45    datatype -> REAL
Rule 46    datatype -> BOOLEANO
Rule 47    expression -> expression operator expression
Rule 48    expression -> PARIZ expression PARDE
Rule 49    expression -> NO expression
Rule 50    expression -> ABRE_RPN special_expression CIERRA_RPN
Rule 51    expression -> IDENTIF
Rule 52    expression -> NUMERO
Rule 53    expression -> boolean_value
Rule 54    boolean_value -> CIERTO
Rule 55    boolean_value -> FALSO
Rule 56    expression -> MENOS expression
Rule 57    special_expression -> IDENTIF IDENTIF operator
Rule 58    special_expression -> NUMERO NUMERO operator
Rule 59    special_expression -> NUMERO IDENTIF operator
Rule 60    special_expression -> IDENTIF NUMERO operator

Terminals, with rules where they appear

ABRE_RPN             : 50
BOOLEANO             : 46
CADENA               : 44
CADENA_VALOR         : 18 25
CIERRA_RPN           : 50
CIERTO               : 54
COMA                 : 9 21
CUANDO               : 13 14
DIFIERE              : 42
ENTERO               : 43
ENTONCES             : 13 14 15
ENTRE                : 33
EQUIVALE             : 41
FALSO                : 55
FIN                  : 1
IDENTIF              : 9 10 16 17 18 23 51 57 57 59 60
IGUAL                : 16 17 18
IMPRIMIR             : 19
INICIO               : 1
LEER                 : 20
LISTO                : 13 14 15
MAS                  : 30
MAYORQUE             : 37
MAYOR_IGUAL          : 39
MENORQUE             : 38
MENOR_IGUAL          : 40
MENOS                : 31 56
MIENTRAS             : 15
NO                   : 36 49
NUMERO               : 52 58 58 59 60
O                    : 34
PARDE                : 19 20 48
PARIZ                : 19 20 48
POR                  : 32
PUNTO                : 1 1 5 6 7 8
REAL                 : 45
SINO                 : 14
Y                    : 35
error                : 

Nonterminals, with rules where they appear

arg                  : 21 22
arithmetic_operator  : 26
assignment_statement : 7
boolean_value        : 53
control_statement    : 6
datatype             : 5
equality_operator    : 29
expression           : 13 14 15 16 24 47 47 48 49 56
if_statement         : 11
list_arg             : 19 21
list_id              : 5 9 20
list_sentences       : 1 3 13 14 14 15
logic_operator       : 27
operator             : 47 57 58 59 60
relational_operator  : 28
sentence             : 3 4
special_expression   : 17 50
start                : 0
system_function_call_statement : 8
while_statement      : 12

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . INICIO PUNTO list_sentences FIN PUNTO

    INICIO          shift and go to state 2

    start                          shift and go to state 1

state 1

    (0) S' -> start .



state 2

    (1) start -> INICIO . PUNTO list_sentences FIN PUNTO

    PUNTO           shift and go to state 3


state 3

    (1) start -> INICIO PUNTO . list_sentences FIN PUNTO
    (2) list_sentences -> .
    (3) list_sentences -> . list_sentences sentence
    (4) list_sentences -> . sentence
    (5) sentence -> . datatype list_id PUNTO
    (6) sentence -> . control_statement PUNTO
    (7) sentence -> . assignment_statement PUNTO
    (8) sentence -> . system_function_call_statement PUNTO
    (43) datatype -> . ENTERO
    (44) datatype -> . CADENA
    (45) datatype -> . REAL
    (46) datatype -> . BOOLEANO
    (11) control_statement -> . if_statement
    (12) control_statement -> . while_statement
    (16) assignment_statement -> . IDENTIF IGUAL expression
    (17) assignment_statement -> . IDENTIF IGUAL special_expression
    (18) assignment_statement -> . IDENTIF IGUAL CADENA_VALOR
    (19) system_function_call_statement -> . IMPRIMIR PARIZ list_arg PARDE
    (20) system_function_call_statement -> . LEER PARIZ list_id PARDE
    (13) if_statement -> . CUANDO expression ENTONCES list_sentences LISTO
    (14) if_statement -> . CUANDO expression ENTONCES list_sentences SINO list_sentences LISTO
    (15) while_statement -> . MIENTRAS expression ENTONCES list_sentences LISTO

  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for BOOLEANO resolved as shift
  ! shift/reduce conflict for IDENTIF resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
    FIN             reduce using rule 2 (list_sentences -> .)
    ENTERO          shift and go to state 10
    CADENA          shift and go to state 11
    REAL            shift and go to state 12
    BOOLEANO        shift and go to state 13
    IDENTIF         shift and go to state 16
    IMPRIMIR        shift and go to state 17
    LEER            shift and go to state 18
    CUANDO          shift and go to state 19
    MIENTRAS        shift and go to state 20

  ! ENTERO          [ reduce using rule 2 (list_sentences -> .) ]
  ! CADENA          [ reduce using rule 2 (list_sentences -> .) ]
  ! REAL            [ reduce using rule 2 (list_sentences -> .) ]
  ! BOOLEANO        [ reduce using rule 2 (list_sentences -> .) ]
  ! IDENTIF         [ reduce using rule 2 (list_sentences -> .) ]
  ! IMPRIMIR        [ reduce using rule 2 (list_sentences -> .) ]
  ! LEER            [ reduce using rule 2 (list_sentences -> .) ]
  ! CUANDO          [ reduce using rule 2 (list_sentences -> .) ]
  ! MIENTRAS        [ reduce using rule 2 (list_sentences -> .) ]

    list_sentences                 shift and go to state 4
    sentence                       shift and go to state 5
    datatype                       shift and go to state 6
    control_statement              shift and go to state 7
    assignment_statement           shift and go to state 8
    system_function_call_statement shift and go to state 9
    if_statement                   shift and go to state 14
    while_statement                shift and go to state 15

state 4

    (1) start -> INICIO PUNTO list_sentences . FIN PUNTO
    (3) list_sentences -> list_sentences . sentence
    (5) sentence -> . datatype list_id PUNTO
    (6) sentence -> . control_statement PUNTO
    (7) sentence -> . assignment_statement PUNTO
    (8) sentence -> . system_function_call_statement PUNTO
    (43) datatype -> . ENTERO
    (44) datatype -> . CADENA
    (45) datatype -> . REAL
    (46) datatype -> . BOOLEANO
    (11) control_statement -> . if_statement
    (12) control_statement -> . while_statement
    (16) assignment_statement -> . IDENTIF IGUAL expression
    (17) assignment_statement -> . IDENTIF IGUAL special_expression
    (18) assignment_statement -> . IDENTIF IGUAL CADENA_VALOR
    (19) system_function_call_statement -> . IMPRIMIR PARIZ list_arg PARDE
    (20) system_function_call_statement -> . LEER PARIZ list_id PARDE
    (13) if_statement -> . CUANDO expression ENTONCES list_sentences LISTO
    (14) if_statement -> . CUANDO expression ENTONCES list_sentences SINO list_sentences LISTO
    (15) while_statement -> . MIENTRAS expression ENTONCES list_sentences LISTO

    FIN             shift and go to state 21
    ENTERO          shift and go to state 10
    CADENA          shift and go to state 11
    REAL            shift and go to state 12
    BOOLEANO        shift and go to state 13
    IDENTIF         shift and go to state 16
    IMPRIMIR        shift and go to state 17
    LEER            shift and go to state 18
    CUANDO          shift and go to state 19
    MIENTRAS        shift and go to state 20

    sentence                       shift and go to state 22
    datatype                       shift and go to state 6
    control_statement              shift and go to state 7
    assignment_statement           shift and go to state 8
    system_function_call_statement shift and go to state 9
    if_statement                   shift and go to state 14
    while_statement                shift and go to state 15

state 5

    (4) list_sentences -> sentence .

    FIN             reduce using rule 4 (list_sentences -> sentence .)
    ENTERO          reduce using rule 4 (list_sentences -> sentence .)
    CADENA          reduce using rule 4 (list_sentences -> sentence .)
    REAL            reduce using rule 4 (list_sentences -> sentence .)
    BOOLEANO        reduce using rule 4 (list_sentences -> sentence .)
    IDENTIF         reduce using rule 4 (list_sentences -> sentence .)
    IMPRIMIR        reduce using rule 4 (list_sentences -> sentence .)
    LEER            reduce using rule 4 (list_sentences -> sentence .)
    CUANDO          reduce using rule 4 (list_sentences -> sentence .)
    MIENTRAS        reduce using rule 4 (list_sentences -> sentence .)
    LISTO           reduce using rule 4 (list_sentences -> sentence .)
    SINO            reduce using rule 4 (list_sentences -> sentence .)


state 6

    (5) sentence -> datatype . list_id PUNTO
    (9) list_id -> . list_id COMA IDENTIF
    (10) list_id -> . IDENTIF

    IDENTIF         shift and go to state 24

    list_id                        shift and go to state 23

state 7

    (6) sentence -> control_statement . PUNTO

    PUNTO           shift and go to state 25


state 8

    (7) sentence -> assignment_statement . PUNTO

    PUNTO           shift and go to state 26


state 9

    (8) sentence -> system_function_call_statement . PUNTO

    PUNTO           shift and go to state 27


state 10

    (43) datatype -> ENTERO .

    IDENTIF         reduce using rule 43 (datatype -> ENTERO .)


state 11

    (44) datatype -> CADENA .

    IDENTIF         reduce using rule 44 (datatype -> CADENA .)


state 12

    (45) datatype -> REAL .

    IDENTIF         reduce using rule 45 (datatype -> REAL .)


state 13

    (46) datatype -> BOOLEANO .

    IDENTIF         reduce using rule 46 (datatype -> BOOLEANO .)


state 14

    (11) control_statement -> if_statement .

    PUNTO           reduce using rule 11 (control_statement -> if_statement .)


state 15

    (12) control_statement -> while_statement .

    PUNTO           reduce using rule 12 (control_statement -> while_statement .)


state 16

    (16) assignment_statement -> IDENTIF . IGUAL expression
    (17) assignment_statement -> IDENTIF . IGUAL special_expression
    (18) assignment_statement -> IDENTIF . IGUAL CADENA_VALOR

    IGUAL           shift and go to state 28


state 17

    (19) system_function_call_statement -> IMPRIMIR . PARIZ list_arg PARDE

    PARIZ           shift and go to state 29


state 18

    (20) system_function_call_statement -> LEER . PARIZ list_id PARDE

    PARIZ           shift and go to state 30


state 19

    (13) if_statement -> CUANDO . expression ENTONCES list_sentences LISTO
    (14) if_statement -> CUANDO . expression ENTONCES list_sentences SINO list_sentences LISTO
    (47) expression -> . expression operator expression
    (48) expression -> . PARIZ expression PARDE
    (49) expression -> . NO expression
    (50) expression -> . ABRE_RPN special_expression CIERRA_RPN
    (51) expression -> . IDENTIF
    (52) expression -> . NUMERO
    (53) expression -> . boolean_value
    (56) expression -> . MENOS expression
    (54) boolean_value -> . CIERTO
    (55) boolean_value -> . FALSO

    PARIZ           shift and go to state 32
    NO              shift and go to state 33
    ABRE_RPN        shift and go to state 34
    IDENTIF         shift and go to state 35
    NUMERO          shift and go to state 36
    MENOS           shift and go to state 38
    CIERTO          shift and go to state 39
    FALSO           shift and go to state 40

    expression                     shift and go to state 31
    boolean_value                  shift and go to state 37

state 20

    (15) while_statement -> MIENTRAS . expression ENTONCES list_sentences LISTO
    (47) expression -> . expression operator expression
    (48) expression -> . PARIZ expression PARDE
    (49) expression -> . NO expression
    (50) expression -> . ABRE_RPN special_expression CIERRA_RPN
    (51) expression -> . IDENTIF
    (52) expression -> . NUMERO
    (53) expression -> . boolean_value
    (56) expression -> . MENOS expression
    (54) boolean_value -> . CIERTO
    (55) boolean_value -> . FALSO

    PARIZ           shift and go to state 32
    NO              shift and go to state 33
    ABRE_RPN        shift and go to state 34
    IDENTIF         shift and go to state 35
    NUMERO          shift and go to state 36
    MENOS           shift and go to state 38
    CIERTO          shift and go to state 39
    FALSO           shift and go to state 40

    expression                     shift and go to state 41
    boolean_value                  shift and go to state 37

state 21

    (1) start -> INICIO PUNTO list_sentences FIN . PUNTO

    PUNTO           shift and go to state 42


state 22

    (3) list_sentences -> list_sentences sentence .

    FIN             reduce using rule 3 (list_sentences -> list_sentences sentence .)
    ENTERO          reduce using rule 3 (list_sentences -> list_sentences sentence .)
    CADENA          reduce using rule 3 (list_sentences -> list_sentences sentence .)
    REAL            reduce using rule 3 (list_sentences -> list_sentences sentence .)
    BOOLEANO        reduce using rule 3 (list_sentences -> list_sentences sentence .)
    IDENTIF         reduce using rule 3 (list_sentences -> list_sentences sentence .)
    IMPRIMIR        reduce using rule 3 (list_sentences -> list_sentences sentence .)
    LEER            reduce using rule 3 (list_sentences -> list_sentences sentence .)
    CUANDO          reduce using rule 3 (list_sentences -> list_sentences sentence .)
    MIENTRAS        reduce using rule 3 (list_sentences -> list_sentences sentence .)
    LISTO           reduce using rule 3 (list_sentences -> list_sentences sentence .)
    SINO            reduce using rule 3 (list_sentences -> list_sentences sentence .)


state 23

    (5) sentence -> datatype list_id . PUNTO
    (9) list_id -> list_id . COMA IDENTIF

    PUNTO           shift and go to state 43
    COMA            shift and go to state 44


state 24

    (10) list_id -> IDENTIF .

    PUNTO           reduce using rule 10 (list_id -> IDENTIF .)
    COMA            reduce using rule 10 (list_id -> IDENTIF .)
    PARDE           reduce using rule 10 (list_id -> IDENTIF .)


state 25

    (6) sentence -> control_statement PUNTO .

    FIN             reduce using rule 6 (sentence -> control_statement PUNTO .)
    ENTERO          reduce using rule 6 (sentence -> control_statement PUNTO .)
    CADENA          reduce using rule 6 (sentence -> control_statement PUNTO .)
    REAL            reduce using rule 6 (sentence -> control_statement PUNTO .)
    BOOLEANO        reduce using rule 6 (sentence -> control_statement PUNTO .)
    IDENTIF         reduce using rule 6 (sentence -> control_statement PUNTO .)
    IMPRIMIR        reduce using rule 6 (sentence -> control_statement PUNTO .)
    LEER            reduce using rule 6 (sentence -> control_statement PUNTO .)
    CUANDO          reduce using rule 6 (sentence -> control_statement PUNTO .)
    MIENTRAS        reduce using rule 6 (sentence -> control_statement PUNTO .)
    LISTO           reduce using rule 6 (sentence -> control_statement PUNTO .)
    SINO            reduce using rule 6 (sentence -> control_statement PUNTO .)


state 26

    (7) sentence -> assignment_statement PUNTO .

    FIN             reduce using rule 7 (sentence -> assignment_statement PUNTO .)
    ENTERO          reduce using rule 7 (sentence -> assignment_statement PUNTO .)
    CADENA          reduce using rule 7 (sentence -> assignment_statement PUNTO .)
    REAL            reduce using rule 7 (sentence -> assignment_statement PUNTO .)
    BOOLEANO        reduce using rule 7 (sentence -> assignment_statement PUNTO .)
    IDENTIF         reduce using rule 7 (sentence -> assignment_statement PUNTO .)
    IMPRIMIR        reduce using rule 7 (sentence -> assignment_statement PUNTO .)
    LEER            reduce using rule 7 (sentence -> assignment_statement PUNTO .)
    CUANDO          reduce using rule 7 (sentence -> assignment_statement PUNTO .)
    MIENTRAS        reduce using rule 7 (sentence -> assignment_statement PUNTO .)
    LISTO           reduce using rule 7 (sentence -> assignment_statement PUNTO .)
    SINO            reduce using rule 7 (sentence -> assignment_statement PUNTO .)


state 27

    (8) sentence -> system_function_call_statement PUNTO .

    FIN             reduce using rule 8 (sentence -> system_function_call_statement PUNTO .)
    ENTERO          reduce using rule 8 (sentence -> system_function_call_statement PUNTO .)
    CADENA          reduce using rule 8 (sentence -> system_function_call_statement PUNTO .)
    REAL            reduce using rule 8 (sentence -> system_function_call_statement PUNTO .)
    BOOLEANO        reduce using rule 8 (sentence -> system_function_call_statement PUNTO .)
    IDENTIF         reduce using rule 8 (sentence -> system_function_call_statement PUNTO .)
    IMPRIMIR        reduce using rule 8 (sentence -> system_function_call_statement PUNTO .)
    LEER            reduce using rule 8 (sentence -> system_function_call_statement PUNTO .)
    CUANDO          reduce using rule 8 (sentence -> system_function_call_statement PUNTO .)
    MIENTRAS        reduce using rule 8 (sentence -> system_function_call_statement PUNTO .)
    LISTO           reduce using rule 8 (sentence -> system_function_call_statement PUNTO .)
    SINO            reduce using rule 8 (sentence -> system_function_call_statement PUNTO .)


state 28

    (16) assignment_statement -> IDENTIF IGUAL . expression
    (17) assignment_statement -> IDENTIF IGUAL . special_expression
    (18) assignment_statement -> IDENTIF IGUAL . CADENA_VALOR
    (47) expression -> . expression operator expression
    (48) expression -> . PARIZ expression PARDE
    (49) expression -> . NO expression
    (50) expression -> . ABRE_RPN special_expression CIERRA_RPN
    (51) expression -> . IDENTIF
    (52) expression -> . NUMERO
    (53) expression -> . boolean_value
    (56) expression -> . MENOS expression
    (57) special_expression -> . IDENTIF IDENTIF operator
    (58) special_expression -> . NUMERO NUMERO operator
    (59) special_expression -> . NUMERO IDENTIF operator
    (60) special_expression -> . IDENTIF NUMERO operator
    (54) boolean_value -> . CIERTO
    (55) boolean_value -> . FALSO

    CADENA_VALOR    shift and go to state 48
    PARIZ           shift and go to state 32
    NO              shift and go to state 33
    ABRE_RPN        shift and go to state 34
    IDENTIF         shift and go to state 45
    NUMERO          shift and go to state 49
    MENOS           shift and go to state 38
    CIERTO          shift and go to state 39
    FALSO           shift and go to state 40

    expression                     shift and go to state 46
    special_expression             shift and go to state 47
    boolean_value                  shift and go to state 37

state 29

    (19) system_function_call_statement -> IMPRIMIR PARIZ . list_arg PARDE
    (21) list_arg -> . list_arg COMA arg
    (22) list_arg -> . arg
    (23) arg -> . IDENTIF
    (24) arg -> . expression
    (25) arg -> . CADENA_VALOR
    (47) expression -> . expression operator expression
    (48) expression -> . PARIZ expression PARDE
    (49) expression -> . NO expression
    (50) expression -> . ABRE_RPN special_expression CIERRA_RPN
    (51) expression -> . IDENTIF
    (52) expression -> . NUMERO
    (53) expression -> . boolean_value
    (56) expression -> . MENOS expression
    (54) boolean_value -> . CIERTO
    (55) boolean_value -> . FALSO

    IDENTIF         shift and go to state 52
    CADENA_VALOR    shift and go to state 54
    PARIZ           shift and go to state 32
    NO              shift and go to state 33
    ABRE_RPN        shift and go to state 34
    NUMERO          shift and go to state 36
    MENOS           shift and go to state 38
    CIERTO          shift and go to state 39
    FALSO           shift and go to state 40

    list_arg                       shift and go to state 50
    arg                            shift and go to state 51
    expression                     shift and go to state 53
    boolean_value                  shift and go to state 37

state 30

    (20) system_function_call_statement -> LEER PARIZ . list_id PARDE
    (9) list_id -> . list_id COMA IDENTIF
    (10) list_id -> . IDENTIF

    IDENTIF         shift and go to state 24

    list_id                        shift and go to state 55

state 31

    (13) if_statement -> CUANDO expression . ENTONCES list_sentences LISTO
    (14) if_statement -> CUANDO expression . ENTONCES list_sentences SINO list_sentences LISTO
    (47) expression -> expression . operator expression
    (26) operator -> . arithmetic_operator
    (27) operator -> . logic_operator
    (28) operator -> . relational_operator
    (29) operator -> . equality_operator
    (30) arithmetic_operator -> . MAS
    (31) arithmetic_operator -> . MENOS
    (32) arithmetic_operator -> . POR
    (33) arithmetic_operator -> . ENTRE
    (34) logic_operator -> . O
    (35) logic_operator -> . Y
    (36) logic_operator -> . NO
    (37) relational_operator -> . MAYORQUE
    (38) relational_operator -> . MENORQUE
    (39) relational_operator -> . MAYOR_IGUAL
    (40) relational_operator -> . MENOR_IGUAL
    (41) equality_operator -> . EQUIVALE
    (42) equality_operator -> . DIFIERE

    ENTONCES        shift and go to state 56
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    ENTRE           shift and go to state 65
    O               shift and go to state 66
    Y               shift and go to state 67
    NO              shift and go to state 68
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYOR_IGUAL     shift and go to state 71
    MENOR_IGUAL     shift and go to state 72
    EQUIVALE        shift and go to state 73
    DIFIERE         shift and go to state 74

    operator                       shift and go to state 57
    arithmetic_operator            shift and go to state 58
    logic_operator                 shift and go to state 59
    relational_operator            shift and go to state 60
    equality_operator              shift and go to state 61

state 32

    (48) expression -> PARIZ . expression PARDE
    (47) expression -> . expression operator expression
    (48) expression -> . PARIZ expression PARDE
    (49) expression -> . NO expression
    (50) expression -> . ABRE_RPN special_expression CIERRA_RPN
    (51) expression -> . IDENTIF
    (52) expression -> . NUMERO
    (53) expression -> . boolean_value
    (56) expression -> . MENOS expression
    (54) boolean_value -> . CIERTO
    (55) boolean_value -> . FALSO

    PARIZ           shift and go to state 32
    NO              shift and go to state 33
    ABRE_RPN        shift and go to state 34
    IDENTIF         shift and go to state 35
    NUMERO          shift and go to state 36
    MENOS           shift and go to state 38
    CIERTO          shift and go to state 39
    FALSO           shift and go to state 40

    expression                     shift and go to state 75
    boolean_value                  shift and go to state 37

state 33

    (49) expression -> NO . expression
    (47) expression -> . expression operator expression
    (48) expression -> . PARIZ expression PARDE
    (49) expression -> . NO expression
    (50) expression -> . ABRE_RPN special_expression CIERRA_RPN
    (51) expression -> . IDENTIF
    (52) expression -> . NUMERO
    (53) expression -> . boolean_value
    (56) expression -> . MENOS expression
    (54) boolean_value -> . CIERTO
    (55) boolean_value -> . FALSO

    PARIZ           shift and go to state 32
    NO              shift and go to state 33
    ABRE_RPN        shift and go to state 34
    IDENTIF         shift and go to state 35
    NUMERO          shift and go to state 36
    MENOS           shift and go to state 38
    CIERTO          shift and go to state 39
    FALSO           shift and go to state 40

    expression                     shift and go to state 76
    boolean_value                  shift and go to state 37

state 34

    (50) expression -> ABRE_RPN . special_expression CIERRA_RPN
    (57) special_expression -> . IDENTIF IDENTIF operator
    (58) special_expression -> . NUMERO NUMERO operator
    (59) special_expression -> . NUMERO IDENTIF operator
    (60) special_expression -> . IDENTIF NUMERO operator

    IDENTIF         shift and go to state 78
    NUMERO          shift and go to state 79

    special_expression             shift and go to state 77

state 35

    (51) expression -> IDENTIF .

    ENTONCES        reduce using rule 51 (expression -> IDENTIF .)
    MAS             reduce using rule 51 (expression -> IDENTIF .)
    MENOS           reduce using rule 51 (expression -> IDENTIF .)
    POR             reduce using rule 51 (expression -> IDENTIF .)
    ENTRE           reduce using rule 51 (expression -> IDENTIF .)
    O               reduce using rule 51 (expression -> IDENTIF .)
    Y               reduce using rule 51 (expression -> IDENTIF .)
    NO              reduce using rule 51 (expression -> IDENTIF .)
    MAYORQUE        reduce using rule 51 (expression -> IDENTIF .)
    MENORQUE        reduce using rule 51 (expression -> IDENTIF .)
    MAYOR_IGUAL     reduce using rule 51 (expression -> IDENTIF .)
    MENOR_IGUAL     reduce using rule 51 (expression -> IDENTIF .)
    EQUIVALE        reduce using rule 51 (expression -> IDENTIF .)
    DIFIERE         reduce using rule 51 (expression -> IDENTIF .)
    PARDE           reduce using rule 51 (expression -> IDENTIF .)
    PUNTO           reduce using rule 51 (expression -> IDENTIF .)
    COMA            reduce using rule 51 (expression -> IDENTIF .)


state 36

    (52) expression -> NUMERO .

    ENTONCES        reduce using rule 52 (expression -> NUMERO .)
    MAS             reduce using rule 52 (expression -> NUMERO .)
    MENOS           reduce using rule 52 (expression -> NUMERO .)
    POR             reduce using rule 52 (expression -> NUMERO .)
    ENTRE           reduce using rule 52 (expression -> NUMERO .)
    O               reduce using rule 52 (expression -> NUMERO .)
    Y               reduce using rule 52 (expression -> NUMERO .)
    NO              reduce using rule 52 (expression -> NUMERO .)
    MAYORQUE        reduce using rule 52 (expression -> NUMERO .)
    MENORQUE        reduce using rule 52 (expression -> NUMERO .)
    MAYOR_IGUAL     reduce using rule 52 (expression -> NUMERO .)
    MENOR_IGUAL     reduce using rule 52 (expression -> NUMERO .)
    EQUIVALE        reduce using rule 52 (expression -> NUMERO .)
    DIFIERE         reduce using rule 52 (expression -> NUMERO .)
    PARDE           reduce using rule 52 (expression -> NUMERO .)
    COMA            reduce using rule 52 (expression -> NUMERO .)
    PUNTO           reduce using rule 52 (expression -> NUMERO .)


state 37

    (53) expression -> boolean_value .

    ENTONCES        reduce using rule 53 (expression -> boolean_value .)
    MAS             reduce using rule 53 (expression -> boolean_value .)
    MENOS           reduce using rule 53 (expression -> boolean_value .)
    POR             reduce using rule 53 (expression -> boolean_value .)
    ENTRE           reduce using rule 53 (expression -> boolean_value .)
    O               reduce using rule 53 (expression -> boolean_value .)
    Y               reduce using rule 53 (expression -> boolean_value .)
    NO              reduce using rule 53 (expression -> boolean_value .)
    MAYORQUE        reduce using rule 53 (expression -> boolean_value .)
    MENORQUE        reduce using rule 53 (expression -> boolean_value .)
    MAYOR_IGUAL     reduce using rule 53 (expression -> boolean_value .)
    MENOR_IGUAL     reduce using rule 53 (expression -> boolean_value .)
    EQUIVALE        reduce using rule 53 (expression -> boolean_value .)
    DIFIERE         reduce using rule 53 (expression -> boolean_value .)
    PUNTO           reduce using rule 53 (expression -> boolean_value .)
    PARDE           reduce using rule 53 (expression -> boolean_value .)
    COMA            reduce using rule 53 (expression -> boolean_value .)


state 38

    (56) expression -> MENOS . expression
    (47) expression -> . expression operator expression
    (48) expression -> . PARIZ expression PARDE
    (49) expression -> . NO expression
    (50) expression -> . ABRE_RPN special_expression CIERRA_RPN
    (51) expression -> . IDENTIF
    (52) expression -> . NUMERO
    (53) expression -> . boolean_value
    (56) expression -> . MENOS expression
    (54) boolean_value -> . CIERTO
    (55) boolean_value -> . FALSO

    PARIZ           shift and go to state 32
    NO              shift and go to state 33
    ABRE_RPN        shift and go to state 34
    IDENTIF         shift and go to state 35
    NUMERO          shift and go to state 36
    MENOS           shift and go to state 38
    CIERTO          shift and go to state 39
    FALSO           shift and go to state 40

    expression                     shift and go to state 80
    boolean_value                  shift and go to state 37

state 39

    (54) boolean_value -> CIERTO .

    ENTONCES        reduce using rule 54 (boolean_value -> CIERTO .)
    MAS             reduce using rule 54 (boolean_value -> CIERTO .)
    MENOS           reduce using rule 54 (boolean_value -> CIERTO .)
    POR             reduce using rule 54 (boolean_value -> CIERTO .)
    ENTRE           reduce using rule 54 (boolean_value -> CIERTO .)
    O               reduce using rule 54 (boolean_value -> CIERTO .)
    Y               reduce using rule 54 (boolean_value -> CIERTO .)
    NO              reduce using rule 54 (boolean_value -> CIERTO .)
    MAYORQUE        reduce using rule 54 (boolean_value -> CIERTO .)
    MENORQUE        reduce using rule 54 (boolean_value -> CIERTO .)
    MAYOR_IGUAL     reduce using rule 54 (boolean_value -> CIERTO .)
    MENOR_IGUAL     reduce using rule 54 (boolean_value -> CIERTO .)
    EQUIVALE        reduce using rule 54 (boolean_value -> CIERTO .)
    DIFIERE         reduce using rule 54 (boolean_value -> CIERTO .)
    PUNTO           reduce using rule 54 (boolean_value -> CIERTO .)
    PARDE           reduce using rule 54 (boolean_value -> CIERTO .)
    COMA            reduce using rule 54 (boolean_value -> CIERTO .)


state 40

    (55) boolean_value -> FALSO .

    ENTONCES        reduce using rule 55 (boolean_value -> FALSO .)
    MAS             reduce using rule 55 (boolean_value -> FALSO .)
    MENOS           reduce using rule 55 (boolean_value -> FALSO .)
    POR             reduce using rule 55 (boolean_value -> FALSO .)
    ENTRE           reduce using rule 55 (boolean_value -> FALSO .)
    O               reduce using rule 55 (boolean_value -> FALSO .)
    Y               reduce using rule 55 (boolean_value -> FALSO .)
    NO              reduce using rule 55 (boolean_value -> FALSO .)
    MAYORQUE        reduce using rule 55 (boolean_value -> FALSO .)
    MENORQUE        reduce using rule 55 (boolean_value -> FALSO .)
    MAYOR_IGUAL     reduce using rule 55 (boolean_value -> FALSO .)
    MENOR_IGUAL     reduce using rule 55 (boolean_value -> FALSO .)
    EQUIVALE        reduce using rule 55 (boolean_value -> FALSO .)
    DIFIERE         reduce using rule 55 (boolean_value -> FALSO .)
    PUNTO           reduce using rule 55 (boolean_value -> FALSO .)
    PARDE           reduce using rule 55 (boolean_value -> FALSO .)
    COMA            reduce using rule 55 (boolean_value -> FALSO .)


state 41

    (15) while_statement -> MIENTRAS expression . ENTONCES list_sentences LISTO
    (47) expression -> expression . operator expression
    (26) operator -> . arithmetic_operator
    (27) operator -> . logic_operator
    (28) operator -> . relational_operator
    (29) operator -> . equality_operator
    (30) arithmetic_operator -> . MAS
    (31) arithmetic_operator -> . MENOS
    (32) arithmetic_operator -> . POR
    (33) arithmetic_operator -> . ENTRE
    (34) logic_operator -> . O
    (35) logic_operator -> . Y
    (36) logic_operator -> . NO
    (37) relational_operator -> . MAYORQUE
    (38) relational_operator -> . MENORQUE
    (39) relational_operator -> . MAYOR_IGUAL
    (40) relational_operator -> . MENOR_IGUAL
    (41) equality_operator -> . EQUIVALE
    (42) equality_operator -> . DIFIERE

    ENTONCES        shift and go to state 81
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    ENTRE           shift and go to state 65
    O               shift and go to state 66
    Y               shift and go to state 67
    NO              shift and go to state 68
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYOR_IGUAL     shift and go to state 71
    MENOR_IGUAL     shift and go to state 72
    EQUIVALE        shift and go to state 73
    DIFIERE         shift and go to state 74

    operator                       shift and go to state 57
    arithmetic_operator            shift and go to state 58
    logic_operator                 shift and go to state 59
    relational_operator            shift and go to state 60
    equality_operator              shift and go to state 61

state 42

    (1) start -> INICIO PUNTO list_sentences FIN PUNTO .

    $end            reduce using rule 1 (start -> INICIO PUNTO list_sentences FIN PUNTO .)


state 43

    (5) sentence -> datatype list_id PUNTO .

    FIN             reduce using rule 5 (sentence -> datatype list_id PUNTO .)
    ENTERO          reduce using rule 5 (sentence -> datatype list_id PUNTO .)
    CADENA          reduce using rule 5 (sentence -> datatype list_id PUNTO .)
    REAL            reduce using rule 5 (sentence -> datatype list_id PUNTO .)
    BOOLEANO        reduce using rule 5 (sentence -> datatype list_id PUNTO .)
    IDENTIF         reduce using rule 5 (sentence -> datatype list_id PUNTO .)
    IMPRIMIR        reduce using rule 5 (sentence -> datatype list_id PUNTO .)
    LEER            reduce using rule 5 (sentence -> datatype list_id PUNTO .)
    CUANDO          reduce using rule 5 (sentence -> datatype list_id PUNTO .)
    MIENTRAS        reduce using rule 5 (sentence -> datatype list_id PUNTO .)
    LISTO           reduce using rule 5 (sentence -> datatype list_id PUNTO .)
    SINO            reduce using rule 5 (sentence -> datatype list_id PUNTO .)


state 44

    (9) list_id -> list_id COMA . IDENTIF

    IDENTIF         shift and go to state 82


state 45

    (51) expression -> IDENTIF .
    (57) special_expression -> IDENTIF . IDENTIF operator
    (60) special_expression -> IDENTIF . NUMERO operator

    MAS             reduce using rule 51 (expression -> IDENTIF .)
    MENOS           reduce using rule 51 (expression -> IDENTIF .)
    POR             reduce using rule 51 (expression -> IDENTIF .)
    ENTRE           reduce using rule 51 (expression -> IDENTIF .)
    O               reduce using rule 51 (expression -> IDENTIF .)
    Y               reduce using rule 51 (expression -> IDENTIF .)
    NO              reduce using rule 51 (expression -> IDENTIF .)
    MAYORQUE        reduce using rule 51 (expression -> IDENTIF .)
    MENORQUE        reduce using rule 51 (expression -> IDENTIF .)
    MAYOR_IGUAL     reduce using rule 51 (expression -> IDENTIF .)
    MENOR_IGUAL     reduce using rule 51 (expression -> IDENTIF .)
    EQUIVALE        reduce using rule 51 (expression -> IDENTIF .)
    DIFIERE         reduce using rule 51 (expression -> IDENTIF .)
    PUNTO           reduce using rule 51 (expression -> IDENTIF .)
    IDENTIF         shift and go to state 83
    NUMERO          shift and go to state 84


state 46

    (16) assignment_statement -> IDENTIF IGUAL expression .
    (47) expression -> expression . operator expression
    (26) operator -> . arithmetic_operator
    (27) operator -> . logic_operator
    (28) operator -> . relational_operator
    (29) operator -> . equality_operator
    (30) arithmetic_operator -> . MAS
    (31) arithmetic_operator -> . MENOS
    (32) arithmetic_operator -> . POR
    (33) arithmetic_operator -> . ENTRE
    (34) logic_operator -> . O
    (35) logic_operator -> . Y
    (36) logic_operator -> . NO
    (37) relational_operator -> . MAYORQUE
    (38) relational_operator -> . MENORQUE
    (39) relational_operator -> . MAYOR_IGUAL
    (40) relational_operator -> . MENOR_IGUAL
    (41) equality_operator -> . EQUIVALE
    (42) equality_operator -> . DIFIERE

    PUNTO           reduce using rule 16 (assignment_statement -> IDENTIF IGUAL expression .)
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    ENTRE           shift and go to state 65
    O               shift and go to state 66
    Y               shift and go to state 67
    NO              shift and go to state 68
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYOR_IGUAL     shift and go to state 71
    MENOR_IGUAL     shift and go to state 72
    EQUIVALE        shift and go to state 73
    DIFIERE         shift and go to state 74

    operator                       shift and go to state 57
    arithmetic_operator            shift and go to state 58
    logic_operator                 shift and go to state 59
    relational_operator            shift and go to state 60
    equality_operator              shift and go to state 61

state 47

    (17) assignment_statement -> IDENTIF IGUAL special_expression .

    PUNTO           reduce using rule 17 (assignment_statement -> IDENTIF IGUAL special_expression .)


state 48

    (18) assignment_statement -> IDENTIF IGUAL CADENA_VALOR .

    PUNTO           reduce using rule 18 (assignment_statement -> IDENTIF IGUAL CADENA_VALOR .)


state 49

    (52) expression -> NUMERO .
    (58) special_expression -> NUMERO . NUMERO operator
    (59) special_expression -> NUMERO . IDENTIF operator

    MAS             reduce using rule 52 (expression -> NUMERO .)
    MENOS           reduce using rule 52 (expression -> NUMERO .)
    POR             reduce using rule 52 (expression -> NUMERO .)
    ENTRE           reduce using rule 52 (expression -> NUMERO .)
    O               reduce using rule 52 (expression -> NUMERO .)
    Y               reduce using rule 52 (expression -> NUMERO .)
    NO              reduce using rule 52 (expression -> NUMERO .)
    MAYORQUE        reduce using rule 52 (expression -> NUMERO .)
    MENORQUE        reduce using rule 52 (expression -> NUMERO .)
    MAYOR_IGUAL     reduce using rule 52 (expression -> NUMERO .)
    MENOR_IGUAL     reduce using rule 52 (expression -> NUMERO .)
    EQUIVALE        reduce using rule 52 (expression -> NUMERO .)
    DIFIERE         reduce using rule 52 (expression -> NUMERO .)
    PUNTO           reduce using rule 52 (expression -> NUMERO .)
    NUMERO          shift and go to state 85
    IDENTIF         shift and go to state 86


state 50

    (19) system_function_call_statement -> IMPRIMIR PARIZ list_arg . PARDE
    (21) list_arg -> list_arg . COMA arg

    PARDE           shift and go to state 87
    COMA            shift and go to state 88


state 51

    (22) list_arg -> arg .

    PARDE           reduce using rule 22 (list_arg -> arg .)
    COMA            reduce using rule 22 (list_arg -> arg .)


state 52

    (23) arg -> IDENTIF .
    (51) expression -> IDENTIF .

  ! reduce/reduce conflict for PARDE resolved using rule 23 (arg -> IDENTIF .)
  ! reduce/reduce conflict for COMA resolved using rule 23 (arg -> IDENTIF .)
    PARDE           reduce using rule 23 (arg -> IDENTIF .)
    COMA            reduce using rule 23 (arg -> IDENTIF .)
    MAS             reduce using rule 51 (expression -> IDENTIF .)
    MENOS           reduce using rule 51 (expression -> IDENTIF .)
    POR             reduce using rule 51 (expression -> IDENTIF .)
    ENTRE           reduce using rule 51 (expression -> IDENTIF .)
    O               reduce using rule 51 (expression -> IDENTIF .)
    Y               reduce using rule 51 (expression -> IDENTIF .)
    NO              reduce using rule 51 (expression -> IDENTIF .)
    MAYORQUE        reduce using rule 51 (expression -> IDENTIF .)
    MENORQUE        reduce using rule 51 (expression -> IDENTIF .)
    MAYOR_IGUAL     reduce using rule 51 (expression -> IDENTIF .)
    MENOR_IGUAL     reduce using rule 51 (expression -> IDENTIF .)
    EQUIVALE        reduce using rule 51 (expression -> IDENTIF .)
    DIFIERE         reduce using rule 51 (expression -> IDENTIF .)

  ! PARDE           [ reduce using rule 51 (expression -> IDENTIF .) ]
  ! COMA            [ reduce using rule 51 (expression -> IDENTIF .) ]


state 53

    (24) arg -> expression .
    (47) expression -> expression . operator expression
    (26) operator -> . arithmetic_operator
    (27) operator -> . logic_operator
    (28) operator -> . relational_operator
    (29) operator -> . equality_operator
    (30) arithmetic_operator -> . MAS
    (31) arithmetic_operator -> . MENOS
    (32) arithmetic_operator -> . POR
    (33) arithmetic_operator -> . ENTRE
    (34) logic_operator -> . O
    (35) logic_operator -> . Y
    (36) logic_operator -> . NO
    (37) relational_operator -> . MAYORQUE
    (38) relational_operator -> . MENORQUE
    (39) relational_operator -> . MAYOR_IGUAL
    (40) relational_operator -> . MENOR_IGUAL
    (41) equality_operator -> . EQUIVALE
    (42) equality_operator -> . DIFIERE

    PARDE           reduce using rule 24 (arg -> expression .)
    COMA            reduce using rule 24 (arg -> expression .)
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    ENTRE           shift and go to state 65
    O               shift and go to state 66
    Y               shift and go to state 67
    NO              shift and go to state 68
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYOR_IGUAL     shift and go to state 71
    MENOR_IGUAL     shift and go to state 72
    EQUIVALE        shift and go to state 73
    DIFIERE         shift and go to state 74

    operator                       shift and go to state 57
    arithmetic_operator            shift and go to state 58
    logic_operator                 shift and go to state 59
    relational_operator            shift and go to state 60
    equality_operator              shift and go to state 61

state 54

    (25) arg -> CADENA_VALOR .

    PARDE           reduce using rule 25 (arg -> CADENA_VALOR .)
    COMA            reduce using rule 25 (arg -> CADENA_VALOR .)


state 55

    (20) system_function_call_statement -> LEER PARIZ list_id . PARDE
    (9) list_id -> list_id . COMA IDENTIF

    PARDE           shift and go to state 89
    COMA            shift and go to state 44


state 56

    (13) if_statement -> CUANDO expression ENTONCES . list_sentences LISTO
    (14) if_statement -> CUANDO expression ENTONCES . list_sentences SINO list_sentences LISTO
    (2) list_sentences -> .
    (3) list_sentences -> . list_sentences sentence
    (4) list_sentences -> . sentence
    (5) sentence -> . datatype list_id PUNTO
    (6) sentence -> . control_statement PUNTO
    (7) sentence -> . assignment_statement PUNTO
    (8) sentence -> . system_function_call_statement PUNTO
    (43) datatype -> . ENTERO
    (44) datatype -> . CADENA
    (45) datatype -> . REAL
    (46) datatype -> . BOOLEANO
    (11) control_statement -> . if_statement
    (12) control_statement -> . while_statement
    (16) assignment_statement -> . IDENTIF IGUAL expression
    (17) assignment_statement -> . IDENTIF IGUAL special_expression
    (18) assignment_statement -> . IDENTIF IGUAL CADENA_VALOR
    (19) system_function_call_statement -> . IMPRIMIR PARIZ list_arg PARDE
    (20) system_function_call_statement -> . LEER PARIZ list_id PARDE
    (13) if_statement -> . CUANDO expression ENTONCES list_sentences LISTO
    (14) if_statement -> . CUANDO expression ENTONCES list_sentences SINO list_sentences LISTO
    (15) while_statement -> . MIENTRAS expression ENTONCES list_sentences LISTO

  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for BOOLEANO resolved as shift
  ! shift/reduce conflict for IDENTIF resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
    LISTO           reduce using rule 2 (list_sentences -> .)
    SINO            reduce using rule 2 (list_sentences -> .)
    ENTERO          shift and go to state 10
    CADENA          shift and go to state 11
    REAL            shift and go to state 12
    BOOLEANO        shift and go to state 13
    IDENTIF         shift and go to state 16
    IMPRIMIR        shift and go to state 17
    LEER            shift and go to state 18
    CUANDO          shift and go to state 19
    MIENTRAS        shift and go to state 20

  ! ENTERO          [ reduce using rule 2 (list_sentences -> .) ]
  ! CADENA          [ reduce using rule 2 (list_sentences -> .) ]
  ! REAL            [ reduce using rule 2 (list_sentences -> .) ]
  ! BOOLEANO        [ reduce using rule 2 (list_sentences -> .) ]
  ! IDENTIF         [ reduce using rule 2 (list_sentences -> .) ]
  ! IMPRIMIR        [ reduce using rule 2 (list_sentences -> .) ]
  ! LEER            [ reduce using rule 2 (list_sentences -> .) ]
  ! CUANDO          [ reduce using rule 2 (list_sentences -> .) ]
  ! MIENTRAS        [ reduce using rule 2 (list_sentences -> .) ]

    list_sentences                 shift and go to state 90
    sentence                       shift and go to state 5
    datatype                       shift and go to state 6
    control_statement              shift and go to state 7
    assignment_statement           shift and go to state 8
    system_function_call_statement shift and go to state 9
    if_statement                   shift and go to state 14
    while_statement                shift and go to state 15

state 57

    (47) expression -> expression operator . expression
    (47) expression -> . expression operator expression
    (48) expression -> . PARIZ expression PARDE
    (49) expression -> . NO expression
    (50) expression -> . ABRE_RPN special_expression CIERRA_RPN
    (51) expression -> . IDENTIF
    (52) expression -> . NUMERO
    (53) expression -> . boolean_value
    (56) expression -> . MENOS expression
    (54) boolean_value -> . CIERTO
    (55) boolean_value -> . FALSO

    PARIZ           shift and go to state 32
    NO              shift and go to state 33
    ABRE_RPN        shift and go to state 34
    IDENTIF         shift and go to state 35
    NUMERO          shift and go to state 36
    MENOS           shift and go to state 38
    CIERTO          shift and go to state 39
    FALSO           shift and go to state 40

    expression                     shift and go to state 91
    boolean_value                  shift and go to state 37

state 58

    (26) operator -> arithmetic_operator .

    PARIZ           reduce using rule 26 (operator -> arithmetic_operator .)
    NO              reduce using rule 26 (operator -> arithmetic_operator .)
    ABRE_RPN        reduce using rule 26 (operator -> arithmetic_operator .)
    IDENTIF         reduce using rule 26 (operator -> arithmetic_operator .)
    NUMERO          reduce using rule 26 (operator -> arithmetic_operator .)
    MENOS           reduce using rule 26 (operator -> arithmetic_operator .)
    CIERTO          reduce using rule 26 (operator -> arithmetic_operator .)
    FALSO           reduce using rule 26 (operator -> arithmetic_operator .)
    PUNTO           reduce using rule 26 (operator -> arithmetic_operator .)
    CIERRA_RPN      reduce using rule 26 (operator -> arithmetic_operator .)


state 59

    (27) operator -> logic_operator .

    PARIZ           reduce using rule 27 (operator -> logic_operator .)
    NO              reduce using rule 27 (operator -> logic_operator .)
    ABRE_RPN        reduce using rule 27 (operator -> logic_operator .)
    IDENTIF         reduce using rule 27 (operator -> logic_operator .)
    NUMERO          reduce using rule 27 (operator -> logic_operator .)
    MENOS           reduce using rule 27 (operator -> logic_operator .)
    CIERTO          reduce using rule 27 (operator -> logic_operator .)
    FALSO           reduce using rule 27 (operator -> logic_operator .)
    PUNTO           reduce using rule 27 (operator -> logic_operator .)
    CIERRA_RPN      reduce using rule 27 (operator -> logic_operator .)


state 60

    (28) operator -> relational_operator .

    PARIZ           reduce using rule 28 (operator -> relational_operator .)
    NO              reduce using rule 28 (operator -> relational_operator .)
    ABRE_RPN        reduce using rule 28 (operator -> relational_operator .)
    IDENTIF         reduce using rule 28 (operator -> relational_operator .)
    NUMERO          reduce using rule 28 (operator -> relational_operator .)
    MENOS           reduce using rule 28 (operator -> relational_operator .)
    CIERTO          reduce using rule 28 (operator -> relational_operator .)
    FALSO           reduce using rule 28 (operator -> relational_operator .)
    PUNTO           reduce using rule 28 (operator -> relational_operator .)
    CIERRA_RPN      reduce using rule 28 (operator -> relational_operator .)


state 61

    (29) operator -> equality_operator .

    PARIZ           reduce using rule 29 (operator -> equality_operator .)
    NO              reduce using rule 29 (operator -> equality_operator .)
    ABRE_RPN        reduce using rule 29 (operator -> equality_operator .)
    IDENTIF         reduce using rule 29 (operator -> equality_operator .)
    NUMERO          reduce using rule 29 (operator -> equality_operator .)
    MENOS           reduce using rule 29 (operator -> equality_operator .)
    CIERTO          reduce using rule 29 (operator -> equality_operator .)
    FALSO           reduce using rule 29 (operator -> equality_operator .)
    PUNTO           reduce using rule 29 (operator -> equality_operator .)
    CIERRA_RPN      reduce using rule 29 (operator -> equality_operator .)


state 62

    (30) arithmetic_operator -> MAS .

    PARIZ           reduce using rule 30 (arithmetic_operator -> MAS .)
    NO              reduce using rule 30 (arithmetic_operator -> MAS .)
    ABRE_RPN        reduce using rule 30 (arithmetic_operator -> MAS .)
    IDENTIF         reduce using rule 30 (arithmetic_operator -> MAS .)
    NUMERO          reduce using rule 30 (arithmetic_operator -> MAS .)
    MENOS           reduce using rule 30 (arithmetic_operator -> MAS .)
    CIERTO          reduce using rule 30 (arithmetic_operator -> MAS .)
    FALSO           reduce using rule 30 (arithmetic_operator -> MAS .)
    PUNTO           reduce using rule 30 (arithmetic_operator -> MAS .)
    CIERRA_RPN      reduce using rule 30 (arithmetic_operator -> MAS .)


state 63

    (31) arithmetic_operator -> MENOS .

    PARIZ           reduce using rule 31 (arithmetic_operator -> MENOS .)
    NO              reduce using rule 31 (arithmetic_operator -> MENOS .)
    ABRE_RPN        reduce using rule 31 (arithmetic_operator -> MENOS .)
    IDENTIF         reduce using rule 31 (arithmetic_operator -> MENOS .)
    NUMERO          reduce using rule 31 (arithmetic_operator -> MENOS .)
    MENOS           reduce using rule 31 (arithmetic_operator -> MENOS .)
    CIERTO          reduce using rule 31 (arithmetic_operator -> MENOS .)
    FALSO           reduce using rule 31 (arithmetic_operator -> MENOS .)
    PUNTO           reduce using rule 31 (arithmetic_operator -> MENOS .)
    CIERRA_RPN      reduce using rule 31 (arithmetic_operator -> MENOS .)


state 64

    (32) arithmetic_operator -> POR .

    PARIZ           reduce using rule 32 (arithmetic_operator -> POR .)
    NO              reduce using rule 32 (arithmetic_operator -> POR .)
    ABRE_RPN        reduce using rule 32 (arithmetic_operator -> POR .)
    IDENTIF         reduce using rule 32 (arithmetic_operator -> POR .)
    NUMERO          reduce using rule 32 (arithmetic_operator -> POR .)
    MENOS           reduce using rule 32 (arithmetic_operator -> POR .)
    CIERTO          reduce using rule 32 (arithmetic_operator -> POR .)
    FALSO           reduce using rule 32 (arithmetic_operator -> POR .)
    PUNTO           reduce using rule 32 (arithmetic_operator -> POR .)
    CIERRA_RPN      reduce using rule 32 (arithmetic_operator -> POR .)


state 65

    (33) arithmetic_operator -> ENTRE .

    PARIZ           reduce using rule 33 (arithmetic_operator -> ENTRE .)
    NO              reduce using rule 33 (arithmetic_operator -> ENTRE .)
    ABRE_RPN        reduce using rule 33 (arithmetic_operator -> ENTRE .)
    IDENTIF         reduce using rule 33 (arithmetic_operator -> ENTRE .)
    NUMERO          reduce using rule 33 (arithmetic_operator -> ENTRE .)
    MENOS           reduce using rule 33 (arithmetic_operator -> ENTRE .)
    CIERTO          reduce using rule 33 (arithmetic_operator -> ENTRE .)
    FALSO           reduce using rule 33 (arithmetic_operator -> ENTRE .)
    PUNTO           reduce using rule 33 (arithmetic_operator -> ENTRE .)
    CIERRA_RPN      reduce using rule 33 (arithmetic_operator -> ENTRE .)


state 66

    (34) logic_operator -> O .

    PARIZ           reduce using rule 34 (logic_operator -> O .)
    NO              reduce using rule 34 (logic_operator -> O .)
    ABRE_RPN        reduce using rule 34 (logic_operator -> O .)
    IDENTIF         reduce using rule 34 (logic_operator -> O .)
    NUMERO          reduce using rule 34 (logic_operator -> O .)
    MENOS           reduce using rule 34 (logic_operator -> O .)
    CIERTO          reduce using rule 34 (logic_operator -> O .)
    FALSO           reduce using rule 34 (logic_operator -> O .)
    PUNTO           reduce using rule 34 (logic_operator -> O .)
    CIERRA_RPN      reduce using rule 34 (logic_operator -> O .)


state 67

    (35) logic_operator -> Y .

    PARIZ           reduce using rule 35 (logic_operator -> Y .)
    NO              reduce using rule 35 (logic_operator -> Y .)
    ABRE_RPN        reduce using rule 35 (logic_operator -> Y .)
    IDENTIF         reduce using rule 35 (logic_operator -> Y .)
    NUMERO          reduce using rule 35 (logic_operator -> Y .)
    MENOS           reduce using rule 35 (logic_operator -> Y .)
    CIERTO          reduce using rule 35 (logic_operator -> Y .)
    FALSO           reduce using rule 35 (logic_operator -> Y .)
    PUNTO           reduce using rule 35 (logic_operator -> Y .)
    CIERRA_RPN      reduce using rule 35 (logic_operator -> Y .)


state 68

    (36) logic_operator -> NO .

    PARIZ           reduce using rule 36 (logic_operator -> NO .)
    NO              reduce using rule 36 (logic_operator -> NO .)
    ABRE_RPN        reduce using rule 36 (logic_operator -> NO .)
    IDENTIF         reduce using rule 36 (logic_operator -> NO .)
    NUMERO          reduce using rule 36 (logic_operator -> NO .)
    MENOS           reduce using rule 36 (logic_operator -> NO .)
    CIERTO          reduce using rule 36 (logic_operator -> NO .)
    FALSO           reduce using rule 36 (logic_operator -> NO .)
    PUNTO           reduce using rule 36 (logic_operator -> NO .)
    CIERRA_RPN      reduce using rule 36 (logic_operator -> NO .)


state 69

    (37) relational_operator -> MAYORQUE .

    PARIZ           reduce using rule 37 (relational_operator -> MAYORQUE .)
    NO              reduce using rule 37 (relational_operator -> MAYORQUE .)
    ABRE_RPN        reduce using rule 37 (relational_operator -> MAYORQUE .)
    IDENTIF         reduce using rule 37 (relational_operator -> MAYORQUE .)
    NUMERO          reduce using rule 37 (relational_operator -> MAYORQUE .)
    MENOS           reduce using rule 37 (relational_operator -> MAYORQUE .)
    CIERTO          reduce using rule 37 (relational_operator -> MAYORQUE .)
    FALSO           reduce using rule 37 (relational_operator -> MAYORQUE .)
    PUNTO           reduce using rule 37 (relational_operator -> MAYORQUE .)
    CIERRA_RPN      reduce using rule 37 (relational_operator -> MAYORQUE .)


state 70

    (38) relational_operator -> MENORQUE .

    PARIZ           reduce using rule 38 (relational_operator -> MENORQUE .)
    NO              reduce using rule 38 (relational_operator -> MENORQUE .)
    ABRE_RPN        reduce using rule 38 (relational_operator -> MENORQUE .)
    IDENTIF         reduce using rule 38 (relational_operator -> MENORQUE .)
    NUMERO          reduce using rule 38 (relational_operator -> MENORQUE .)
    MENOS           reduce using rule 38 (relational_operator -> MENORQUE .)
    CIERTO          reduce using rule 38 (relational_operator -> MENORQUE .)
    FALSO           reduce using rule 38 (relational_operator -> MENORQUE .)
    PUNTO           reduce using rule 38 (relational_operator -> MENORQUE .)
    CIERRA_RPN      reduce using rule 38 (relational_operator -> MENORQUE .)


state 71

    (39) relational_operator -> MAYOR_IGUAL .

    PARIZ           reduce using rule 39 (relational_operator -> MAYOR_IGUAL .)
    NO              reduce using rule 39 (relational_operator -> MAYOR_IGUAL .)
    ABRE_RPN        reduce using rule 39 (relational_operator -> MAYOR_IGUAL .)
    IDENTIF         reduce using rule 39 (relational_operator -> MAYOR_IGUAL .)
    NUMERO          reduce using rule 39 (relational_operator -> MAYOR_IGUAL .)
    MENOS           reduce using rule 39 (relational_operator -> MAYOR_IGUAL .)
    CIERTO          reduce using rule 39 (relational_operator -> MAYOR_IGUAL .)
    FALSO           reduce using rule 39 (relational_operator -> MAYOR_IGUAL .)
    PUNTO           reduce using rule 39 (relational_operator -> MAYOR_IGUAL .)
    CIERRA_RPN      reduce using rule 39 (relational_operator -> MAYOR_IGUAL .)


state 72

    (40) relational_operator -> MENOR_IGUAL .

    PARIZ           reduce using rule 40 (relational_operator -> MENOR_IGUAL .)
    NO              reduce using rule 40 (relational_operator -> MENOR_IGUAL .)
    ABRE_RPN        reduce using rule 40 (relational_operator -> MENOR_IGUAL .)
    IDENTIF         reduce using rule 40 (relational_operator -> MENOR_IGUAL .)
    NUMERO          reduce using rule 40 (relational_operator -> MENOR_IGUAL .)
    MENOS           reduce using rule 40 (relational_operator -> MENOR_IGUAL .)
    CIERTO          reduce using rule 40 (relational_operator -> MENOR_IGUAL .)
    FALSO           reduce using rule 40 (relational_operator -> MENOR_IGUAL .)
    PUNTO           reduce using rule 40 (relational_operator -> MENOR_IGUAL .)
    CIERRA_RPN      reduce using rule 40 (relational_operator -> MENOR_IGUAL .)


state 73

    (41) equality_operator -> EQUIVALE .

    PARIZ           reduce using rule 41 (equality_operator -> EQUIVALE .)
    NO              reduce using rule 41 (equality_operator -> EQUIVALE .)
    ABRE_RPN        reduce using rule 41 (equality_operator -> EQUIVALE .)
    IDENTIF         reduce using rule 41 (equality_operator -> EQUIVALE .)
    NUMERO          reduce using rule 41 (equality_operator -> EQUIVALE .)
    MENOS           reduce using rule 41 (equality_operator -> EQUIVALE .)
    CIERTO          reduce using rule 41 (equality_operator -> EQUIVALE .)
    FALSO           reduce using rule 41 (equality_operator -> EQUIVALE .)
    PUNTO           reduce using rule 41 (equality_operator -> EQUIVALE .)
    CIERRA_RPN      reduce using rule 41 (equality_operator -> EQUIVALE .)


state 74

    (42) equality_operator -> DIFIERE .

    PARIZ           reduce using rule 42 (equality_operator -> DIFIERE .)
    NO              reduce using rule 42 (equality_operator -> DIFIERE .)
    ABRE_RPN        reduce using rule 42 (equality_operator -> DIFIERE .)
    IDENTIF         reduce using rule 42 (equality_operator -> DIFIERE .)
    NUMERO          reduce using rule 42 (equality_operator -> DIFIERE .)
    MENOS           reduce using rule 42 (equality_operator -> DIFIERE .)
    CIERTO          reduce using rule 42 (equality_operator -> DIFIERE .)
    FALSO           reduce using rule 42 (equality_operator -> DIFIERE .)
    PUNTO           reduce using rule 42 (equality_operator -> DIFIERE .)
    CIERRA_RPN      reduce using rule 42 (equality_operator -> DIFIERE .)


state 75

    (48) expression -> PARIZ expression . PARDE
    (47) expression -> expression . operator expression
    (26) operator -> . arithmetic_operator
    (27) operator -> . logic_operator
    (28) operator -> . relational_operator
    (29) operator -> . equality_operator
    (30) arithmetic_operator -> . MAS
    (31) arithmetic_operator -> . MENOS
    (32) arithmetic_operator -> . POR
    (33) arithmetic_operator -> . ENTRE
    (34) logic_operator -> . O
    (35) logic_operator -> . Y
    (36) logic_operator -> . NO
    (37) relational_operator -> . MAYORQUE
    (38) relational_operator -> . MENORQUE
    (39) relational_operator -> . MAYOR_IGUAL
    (40) relational_operator -> . MENOR_IGUAL
    (41) equality_operator -> . EQUIVALE
    (42) equality_operator -> . DIFIERE

    PARDE           shift and go to state 92
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    ENTRE           shift and go to state 65
    O               shift and go to state 66
    Y               shift and go to state 67
    NO              shift and go to state 68
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYOR_IGUAL     shift and go to state 71
    MENOR_IGUAL     shift and go to state 72
    EQUIVALE        shift and go to state 73
    DIFIERE         shift and go to state 74

    operator                       shift and go to state 57
    arithmetic_operator            shift and go to state 58
    logic_operator                 shift and go to state 59
    relational_operator            shift and go to state 60
    equality_operator              shift and go to state 61

state 76

    (49) expression -> NO expression .
    (47) expression -> expression . operator expression
    (26) operator -> . arithmetic_operator
    (27) operator -> . logic_operator
    (28) operator -> . relational_operator
    (29) operator -> . equality_operator
    (30) arithmetic_operator -> . MAS
    (31) arithmetic_operator -> . MENOS
    (32) arithmetic_operator -> . POR
    (33) arithmetic_operator -> . ENTRE
    (34) logic_operator -> . O
    (35) logic_operator -> . Y
    (36) logic_operator -> . NO
    (37) relational_operator -> . MAYORQUE
    (38) relational_operator -> . MENORQUE
    (39) relational_operator -> . MAYOR_IGUAL
    (40) relational_operator -> . MENOR_IGUAL
    (41) equality_operator -> . EQUIVALE
    (42) equality_operator -> . DIFIERE

    ENTONCES        reduce using rule 49 (expression -> NO expression .)
    PUNTO           reduce using rule 49 (expression -> NO expression .)
    PARDE           reduce using rule 49 (expression -> NO expression .)
    COMA            reduce using rule 49 (expression -> NO expression .)
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    ENTRE           shift and go to state 65
    O               shift and go to state 66
    Y               shift and go to state 67
    NO              shift and go to state 68
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYOR_IGUAL     shift and go to state 71
    MENOR_IGUAL     shift and go to state 72
    EQUIVALE        shift and go to state 73
    DIFIERE         shift and go to state 74

  ! MAS             [ reduce using rule 49 (expression -> NO expression .) ]
  ! MENOS           [ reduce using rule 49 (expression -> NO expression .) ]
  ! POR             [ reduce using rule 49 (expression -> NO expression .) ]
  ! ENTRE           [ reduce using rule 49 (expression -> NO expression .) ]
  ! O               [ reduce using rule 49 (expression -> NO expression .) ]
  ! Y               [ reduce using rule 49 (expression -> NO expression .) ]
  ! NO              [ reduce using rule 49 (expression -> NO expression .) ]
  ! MAYORQUE        [ reduce using rule 49 (expression -> NO expression .) ]
  ! MENORQUE        [ reduce using rule 49 (expression -> NO expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 49 (expression -> NO expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 49 (expression -> NO expression .) ]
  ! EQUIVALE        [ reduce using rule 49 (expression -> NO expression .) ]
  ! DIFIERE         [ reduce using rule 49 (expression -> NO expression .) ]

    operator                       shift and go to state 57
    arithmetic_operator            shift and go to state 58
    logic_operator                 shift and go to state 59
    relational_operator            shift and go to state 60
    equality_operator              shift and go to state 61

state 77

    (50) expression -> ABRE_RPN special_expression . CIERRA_RPN

    CIERRA_RPN      shift and go to state 93


state 78

    (57) special_expression -> IDENTIF . IDENTIF operator
    (60) special_expression -> IDENTIF . NUMERO operator

    IDENTIF         shift and go to state 83
    NUMERO          shift and go to state 84


state 79

    (58) special_expression -> NUMERO . NUMERO operator
    (59) special_expression -> NUMERO . IDENTIF operator

    NUMERO          shift and go to state 85
    IDENTIF         shift and go to state 86


state 80

    (56) expression -> MENOS expression .
    (47) expression -> expression . operator expression
    (26) operator -> . arithmetic_operator
    (27) operator -> . logic_operator
    (28) operator -> . relational_operator
    (29) operator -> . equality_operator
    (30) arithmetic_operator -> . MAS
    (31) arithmetic_operator -> . MENOS
    (32) arithmetic_operator -> . POR
    (33) arithmetic_operator -> . ENTRE
    (34) logic_operator -> . O
    (35) logic_operator -> . Y
    (36) logic_operator -> . NO
    (37) relational_operator -> . MAYORQUE
    (38) relational_operator -> . MENORQUE
    (39) relational_operator -> . MAYOR_IGUAL
    (40) relational_operator -> . MENOR_IGUAL
    (41) equality_operator -> . EQUIVALE
    (42) equality_operator -> . DIFIERE

    ENTONCES        reduce using rule 56 (expression -> MENOS expression .)
    MAS             reduce using rule 56 (expression -> MENOS expression .)
    MENOS           reduce using rule 56 (expression -> MENOS expression .)
    POR             reduce using rule 56 (expression -> MENOS expression .)
    ENTRE           reduce using rule 56 (expression -> MENOS expression .)
    O               reduce using rule 56 (expression -> MENOS expression .)
    Y               reduce using rule 56 (expression -> MENOS expression .)
    NO              reduce using rule 56 (expression -> MENOS expression .)
    MAYORQUE        reduce using rule 56 (expression -> MENOS expression .)
    MENORQUE        reduce using rule 56 (expression -> MENOS expression .)
    MAYOR_IGUAL     reduce using rule 56 (expression -> MENOS expression .)
    MENOR_IGUAL     reduce using rule 56 (expression -> MENOS expression .)
    EQUIVALE        reduce using rule 56 (expression -> MENOS expression .)
    DIFIERE         reduce using rule 56 (expression -> MENOS expression .)
    PUNTO           reduce using rule 56 (expression -> MENOS expression .)
    PARDE           reduce using rule 56 (expression -> MENOS expression .)
    COMA            reduce using rule 56 (expression -> MENOS expression .)

  ! MAS             [ shift and go to state 62 ]
  ! MENOS           [ shift and go to state 63 ]
  ! POR             [ shift and go to state 64 ]
  ! ENTRE           [ shift and go to state 65 ]
  ! O               [ shift and go to state 66 ]
  ! Y               [ shift and go to state 67 ]
  ! NO              [ shift and go to state 68 ]
  ! MAYORQUE        [ shift and go to state 69 ]
  ! MENORQUE        [ shift and go to state 70 ]
  ! MAYOR_IGUAL     [ shift and go to state 71 ]
  ! MENOR_IGUAL     [ shift and go to state 72 ]
  ! EQUIVALE        [ shift and go to state 73 ]
  ! DIFIERE         [ shift and go to state 74 ]

    operator                       shift and go to state 57
    arithmetic_operator            shift and go to state 58
    logic_operator                 shift and go to state 59
    relational_operator            shift and go to state 60
    equality_operator              shift and go to state 61

state 81

    (15) while_statement -> MIENTRAS expression ENTONCES . list_sentences LISTO
    (2) list_sentences -> .
    (3) list_sentences -> . list_sentences sentence
    (4) list_sentences -> . sentence
    (5) sentence -> . datatype list_id PUNTO
    (6) sentence -> . control_statement PUNTO
    (7) sentence -> . assignment_statement PUNTO
    (8) sentence -> . system_function_call_statement PUNTO
    (43) datatype -> . ENTERO
    (44) datatype -> . CADENA
    (45) datatype -> . REAL
    (46) datatype -> . BOOLEANO
    (11) control_statement -> . if_statement
    (12) control_statement -> . while_statement
    (16) assignment_statement -> . IDENTIF IGUAL expression
    (17) assignment_statement -> . IDENTIF IGUAL special_expression
    (18) assignment_statement -> . IDENTIF IGUAL CADENA_VALOR
    (19) system_function_call_statement -> . IMPRIMIR PARIZ list_arg PARDE
    (20) system_function_call_statement -> . LEER PARIZ list_id PARDE
    (13) if_statement -> . CUANDO expression ENTONCES list_sentences LISTO
    (14) if_statement -> . CUANDO expression ENTONCES list_sentences SINO list_sentences LISTO
    (15) while_statement -> . MIENTRAS expression ENTONCES list_sentences LISTO

  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for BOOLEANO resolved as shift
  ! shift/reduce conflict for IDENTIF resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
    LISTO           reduce using rule 2 (list_sentences -> .)
    ENTERO          shift and go to state 10
    CADENA          shift and go to state 11
    REAL            shift and go to state 12
    BOOLEANO        shift and go to state 13
    IDENTIF         shift and go to state 16
    IMPRIMIR        shift and go to state 17
    LEER            shift and go to state 18
    CUANDO          shift and go to state 19
    MIENTRAS        shift and go to state 20

  ! ENTERO          [ reduce using rule 2 (list_sentences -> .) ]
  ! CADENA          [ reduce using rule 2 (list_sentences -> .) ]
  ! REAL            [ reduce using rule 2 (list_sentences -> .) ]
  ! BOOLEANO        [ reduce using rule 2 (list_sentences -> .) ]
  ! IDENTIF         [ reduce using rule 2 (list_sentences -> .) ]
  ! IMPRIMIR        [ reduce using rule 2 (list_sentences -> .) ]
  ! LEER            [ reduce using rule 2 (list_sentences -> .) ]
  ! CUANDO          [ reduce using rule 2 (list_sentences -> .) ]
  ! MIENTRAS        [ reduce using rule 2 (list_sentences -> .) ]

    list_sentences                 shift and go to state 94
    sentence                       shift and go to state 5
    datatype                       shift and go to state 6
    control_statement              shift and go to state 7
    assignment_statement           shift and go to state 8
    system_function_call_statement shift and go to state 9
    if_statement                   shift and go to state 14
    while_statement                shift and go to state 15

state 82

    (9) list_id -> list_id COMA IDENTIF .

    PUNTO           reduce using rule 9 (list_id -> list_id COMA IDENTIF .)
    COMA            reduce using rule 9 (list_id -> list_id COMA IDENTIF .)
    PARDE           reduce using rule 9 (list_id -> list_id COMA IDENTIF .)


state 83

    (57) special_expression -> IDENTIF IDENTIF . operator
    (26) operator -> . arithmetic_operator
    (27) operator -> . logic_operator
    (28) operator -> . relational_operator
    (29) operator -> . equality_operator
    (30) arithmetic_operator -> . MAS
    (31) arithmetic_operator -> . MENOS
    (32) arithmetic_operator -> . POR
    (33) arithmetic_operator -> . ENTRE
    (34) logic_operator -> . O
    (35) logic_operator -> . Y
    (36) logic_operator -> . NO
    (37) relational_operator -> . MAYORQUE
    (38) relational_operator -> . MENORQUE
    (39) relational_operator -> . MAYOR_IGUAL
    (40) relational_operator -> . MENOR_IGUAL
    (41) equality_operator -> . EQUIVALE
    (42) equality_operator -> . DIFIERE

    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    ENTRE           shift and go to state 65
    O               shift and go to state 66
    Y               shift and go to state 67
    NO              shift and go to state 68
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYOR_IGUAL     shift and go to state 71
    MENOR_IGUAL     shift and go to state 72
    EQUIVALE        shift and go to state 73
    DIFIERE         shift and go to state 74

    operator                       shift and go to state 95
    arithmetic_operator            shift and go to state 58
    logic_operator                 shift and go to state 59
    relational_operator            shift and go to state 60
    equality_operator              shift and go to state 61

state 84

    (60) special_expression -> IDENTIF NUMERO . operator
    (26) operator -> . arithmetic_operator
    (27) operator -> . logic_operator
    (28) operator -> . relational_operator
    (29) operator -> . equality_operator
    (30) arithmetic_operator -> . MAS
    (31) arithmetic_operator -> . MENOS
    (32) arithmetic_operator -> . POR
    (33) arithmetic_operator -> . ENTRE
    (34) logic_operator -> . O
    (35) logic_operator -> . Y
    (36) logic_operator -> . NO
    (37) relational_operator -> . MAYORQUE
    (38) relational_operator -> . MENORQUE
    (39) relational_operator -> . MAYOR_IGUAL
    (40) relational_operator -> . MENOR_IGUAL
    (41) equality_operator -> . EQUIVALE
    (42) equality_operator -> . DIFIERE

    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    ENTRE           shift and go to state 65
    O               shift and go to state 66
    Y               shift and go to state 67
    NO              shift and go to state 68
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYOR_IGUAL     shift and go to state 71
    MENOR_IGUAL     shift and go to state 72
    EQUIVALE        shift and go to state 73
    DIFIERE         shift and go to state 74

    operator                       shift and go to state 96
    arithmetic_operator            shift and go to state 58
    logic_operator                 shift and go to state 59
    relational_operator            shift and go to state 60
    equality_operator              shift and go to state 61

state 85

    (58) special_expression -> NUMERO NUMERO . operator
    (26) operator -> . arithmetic_operator
    (27) operator -> . logic_operator
    (28) operator -> . relational_operator
    (29) operator -> . equality_operator
    (30) arithmetic_operator -> . MAS
    (31) arithmetic_operator -> . MENOS
    (32) arithmetic_operator -> . POR
    (33) arithmetic_operator -> . ENTRE
    (34) logic_operator -> . O
    (35) logic_operator -> . Y
    (36) logic_operator -> . NO
    (37) relational_operator -> . MAYORQUE
    (38) relational_operator -> . MENORQUE
    (39) relational_operator -> . MAYOR_IGUAL
    (40) relational_operator -> . MENOR_IGUAL
    (41) equality_operator -> . EQUIVALE
    (42) equality_operator -> . DIFIERE

    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    ENTRE           shift and go to state 65
    O               shift and go to state 66
    Y               shift and go to state 67
    NO              shift and go to state 68
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYOR_IGUAL     shift and go to state 71
    MENOR_IGUAL     shift and go to state 72
    EQUIVALE        shift and go to state 73
    DIFIERE         shift and go to state 74

    operator                       shift and go to state 97
    arithmetic_operator            shift and go to state 58
    logic_operator                 shift and go to state 59
    relational_operator            shift and go to state 60
    equality_operator              shift and go to state 61

state 86

    (59) special_expression -> NUMERO IDENTIF . operator
    (26) operator -> . arithmetic_operator
    (27) operator -> . logic_operator
    (28) operator -> . relational_operator
    (29) operator -> . equality_operator
    (30) arithmetic_operator -> . MAS
    (31) arithmetic_operator -> . MENOS
    (32) arithmetic_operator -> . POR
    (33) arithmetic_operator -> . ENTRE
    (34) logic_operator -> . O
    (35) logic_operator -> . Y
    (36) logic_operator -> . NO
    (37) relational_operator -> . MAYORQUE
    (38) relational_operator -> . MENORQUE
    (39) relational_operator -> . MAYOR_IGUAL
    (40) relational_operator -> . MENOR_IGUAL
    (41) equality_operator -> . EQUIVALE
    (42) equality_operator -> . DIFIERE

    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    ENTRE           shift and go to state 65
    O               shift and go to state 66
    Y               shift and go to state 67
    NO              shift and go to state 68
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYOR_IGUAL     shift and go to state 71
    MENOR_IGUAL     shift and go to state 72
    EQUIVALE        shift and go to state 73
    DIFIERE         shift and go to state 74

    operator                       shift and go to state 98
    arithmetic_operator            shift and go to state 58
    logic_operator                 shift and go to state 59
    relational_operator            shift and go to state 60
    equality_operator              shift and go to state 61

state 87

    (19) system_function_call_statement -> IMPRIMIR PARIZ list_arg PARDE .

    PUNTO           reduce using rule 19 (system_function_call_statement -> IMPRIMIR PARIZ list_arg PARDE .)


state 88

    (21) list_arg -> list_arg COMA . arg
    (23) arg -> . IDENTIF
    (24) arg -> . expression
    (25) arg -> . CADENA_VALOR
    (47) expression -> . expression operator expression
    (48) expression -> . PARIZ expression PARDE
    (49) expression -> . NO expression
    (50) expression -> . ABRE_RPN special_expression CIERRA_RPN
    (51) expression -> . IDENTIF
    (52) expression -> . NUMERO
    (53) expression -> . boolean_value
    (56) expression -> . MENOS expression
    (54) boolean_value -> . CIERTO
    (55) boolean_value -> . FALSO

    IDENTIF         shift and go to state 52
    CADENA_VALOR    shift and go to state 54
    PARIZ           shift and go to state 32
    NO              shift and go to state 33
    ABRE_RPN        shift and go to state 34
    NUMERO          shift and go to state 36
    MENOS           shift and go to state 38
    CIERTO          shift and go to state 39
    FALSO           shift and go to state 40

    arg                            shift and go to state 99
    expression                     shift and go to state 53
    boolean_value                  shift and go to state 37

state 89

    (20) system_function_call_statement -> LEER PARIZ list_id PARDE .

    PUNTO           reduce using rule 20 (system_function_call_statement -> LEER PARIZ list_id PARDE .)


state 90

    (13) if_statement -> CUANDO expression ENTONCES list_sentences . LISTO
    (14) if_statement -> CUANDO expression ENTONCES list_sentences . SINO list_sentences LISTO
    (3) list_sentences -> list_sentences . sentence
    (5) sentence -> . datatype list_id PUNTO
    (6) sentence -> . control_statement PUNTO
    (7) sentence -> . assignment_statement PUNTO
    (8) sentence -> . system_function_call_statement PUNTO
    (43) datatype -> . ENTERO
    (44) datatype -> . CADENA
    (45) datatype -> . REAL
    (46) datatype -> . BOOLEANO
    (11) control_statement -> . if_statement
    (12) control_statement -> . while_statement
    (16) assignment_statement -> . IDENTIF IGUAL expression
    (17) assignment_statement -> . IDENTIF IGUAL special_expression
    (18) assignment_statement -> . IDENTIF IGUAL CADENA_VALOR
    (19) system_function_call_statement -> . IMPRIMIR PARIZ list_arg PARDE
    (20) system_function_call_statement -> . LEER PARIZ list_id PARDE
    (13) if_statement -> . CUANDO expression ENTONCES list_sentences LISTO
    (14) if_statement -> . CUANDO expression ENTONCES list_sentences SINO list_sentences LISTO
    (15) while_statement -> . MIENTRAS expression ENTONCES list_sentences LISTO

    LISTO           shift and go to state 100
    SINO            shift and go to state 101
    ENTERO          shift and go to state 10
    CADENA          shift and go to state 11
    REAL            shift and go to state 12
    BOOLEANO        shift and go to state 13
    IDENTIF         shift and go to state 16
    IMPRIMIR        shift and go to state 17
    LEER            shift and go to state 18
    CUANDO          shift and go to state 19
    MIENTRAS        shift and go to state 20

    sentence                       shift and go to state 22
    datatype                       shift and go to state 6
    control_statement              shift and go to state 7
    assignment_statement           shift and go to state 8
    system_function_call_statement shift and go to state 9
    if_statement                   shift and go to state 14
    while_statement                shift and go to state 15

state 91

    (47) expression -> expression operator expression .
    (47) expression -> expression . operator expression
    (26) operator -> . arithmetic_operator
    (27) operator -> . logic_operator
    (28) operator -> . relational_operator
    (29) operator -> . equality_operator
    (30) arithmetic_operator -> . MAS
    (31) arithmetic_operator -> . MENOS
    (32) arithmetic_operator -> . POR
    (33) arithmetic_operator -> . ENTRE
    (34) logic_operator -> . O
    (35) logic_operator -> . Y
    (36) logic_operator -> . NO
    (37) relational_operator -> . MAYORQUE
    (38) relational_operator -> . MENORQUE
    (39) relational_operator -> . MAYOR_IGUAL
    (40) relational_operator -> . MENOR_IGUAL
    (41) equality_operator -> . EQUIVALE
    (42) equality_operator -> . DIFIERE

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for ENTRE resolved as shift
  ! shift/reduce conflict for O resolved as shift
  ! shift/reduce conflict for Y resolved as shift
  ! shift/reduce conflict for NO resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for EQUIVALE resolved as shift
  ! shift/reduce conflict for DIFIERE resolved as shift
    ENTONCES        reduce using rule 47 (expression -> expression operator expression .)
    PUNTO           reduce using rule 47 (expression -> expression operator expression .)
    PARDE           reduce using rule 47 (expression -> expression operator expression .)
    COMA            reduce using rule 47 (expression -> expression operator expression .)
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    ENTRE           shift and go to state 65
    O               shift and go to state 66
    Y               shift and go to state 67
    NO              shift and go to state 68
    MAYORQUE        shift and go to state 69
    MENORQUE        shift and go to state 70
    MAYOR_IGUAL     shift and go to state 71
    MENOR_IGUAL     shift and go to state 72
    EQUIVALE        shift and go to state 73
    DIFIERE         shift and go to state 74

  ! MAS             [ reduce using rule 47 (expression -> expression operator expression .) ]
  ! MENOS           [ reduce using rule 47 (expression -> expression operator expression .) ]
  ! POR             [ reduce using rule 47 (expression -> expression operator expression .) ]
  ! ENTRE           [ reduce using rule 47 (expression -> expression operator expression .) ]
  ! O               [ reduce using rule 47 (expression -> expression operator expression .) ]
  ! Y               [ reduce using rule 47 (expression -> expression operator expression .) ]
  ! NO              [ reduce using rule 47 (expression -> expression operator expression .) ]
  ! MAYORQUE        [ reduce using rule 47 (expression -> expression operator expression .) ]
  ! MENORQUE        [ reduce using rule 47 (expression -> expression operator expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 47 (expression -> expression operator expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 47 (expression -> expression operator expression .) ]
  ! EQUIVALE        [ reduce using rule 47 (expression -> expression operator expression .) ]
  ! DIFIERE         [ reduce using rule 47 (expression -> expression operator expression .) ]

    operator                       shift and go to state 57
    arithmetic_operator            shift and go to state 58
    logic_operator                 shift and go to state 59
    relational_operator            shift and go to state 60
    equality_operator              shift and go to state 61

state 92

    (48) expression -> PARIZ expression PARDE .

    ENTONCES        reduce using rule 48 (expression -> PARIZ expression PARDE .)
    MAS             reduce using rule 48 (expression -> PARIZ expression PARDE .)
    MENOS           reduce using rule 48 (expression -> PARIZ expression PARDE .)
    POR             reduce using rule 48 (expression -> PARIZ expression PARDE .)
    ENTRE           reduce using rule 48 (expression -> PARIZ expression PARDE .)
    O               reduce using rule 48 (expression -> PARIZ expression PARDE .)
    Y               reduce using rule 48 (expression -> PARIZ expression PARDE .)
    NO              reduce using rule 48 (expression -> PARIZ expression PARDE .)
    MAYORQUE        reduce using rule 48 (expression -> PARIZ expression PARDE .)
    MENORQUE        reduce using rule 48 (expression -> PARIZ expression PARDE .)
    MAYOR_IGUAL     reduce using rule 48 (expression -> PARIZ expression PARDE .)
    MENOR_IGUAL     reduce using rule 48 (expression -> PARIZ expression PARDE .)
    EQUIVALE        reduce using rule 48 (expression -> PARIZ expression PARDE .)
    DIFIERE         reduce using rule 48 (expression -> PARIZ expression PARDE .)
    PUNTO           reduce using rule 48 (expression -> PARIZ expression PARDE .)
    PARDE           reduce using rule 48 (expression -> PARIZ expression PARDE .)
    COMA            reduce using rule 48 (expression -> PARIZ expression PARDE .)


state 93

    (50) expression -> ABRE_RPN special_expression CIERRA_RPN .

    ENTONCES        reduce using rule 50 (expression -> ABRE_RPN special_expression CIERRA_RPN .)
    MAS             reduce using rule 50 (expression -> ABRE_RPN special_expression CIERRA_RPN .)
    MENOS           reduce using rule 50 (expression -> ABRE_RPN special_expression CIERRA_RPN .)
    POR             reduce using rule 50 (expression -> ABRE_RPN special_expression CIERRA_RPN .)
    ENTRE           reduce using rule 50 (expression -> ABRE_RPN special_expression CIERRA_RPN .)
    O               reduce using rule 50 (expression -> ABRE_RPN special_expression CIERRA_RPN .)
    Y               reduce using rule 50 (expression -> ABRE_RPN special_expression CIERRA_RPN .)
    NO              reduce using rule 50 (expression -> ABRE_RPN special_expression CIERRA_RPN .)
    MAYORQUE        reduce using rule 50 (expression -> ABRE_RPN special_expression CIERRA_RPN .)
    MENORQUE        reduce using rule 50 (expression -> ABRE_RPN special_expression CIERRA_RPN .)
    MAYOR_IGUAL     reduce using rule 50 (expression -> ABRE_RPN special_expression CIERRA_RPN .)
    MENOR_IGUAL     reduce using rule 50 (expression -> ABRE_RPN special_expression CIERRA_RPN .)
    EQUIVALE        reduce using rule 50 (expression -> ABRE_RPN special_expression CIERRA_RPN .)
    DIFIERE         reduce using rule 50 (expression -> ABRE_RPN special_expression CIERRA_RPN .)
    PUNTO           reduce using rule 50 (expression -> ABRE_RPN special_expression CIERRA_RPN .)
    PARDE           reduce using rule 50 (expression -> ABRE_RPN special_expression CIERRA_RPN .)
    COMA            reduce using rule 50 (expression -> ABRE_RPN special_expression CIERRA_RPN .)


state 94

    (15) while_statement -> MIENTRAS expression ENTONCES list_sentences . LISTO
    (3) list_sentences -> list_sentences . sentence
    (5) sentence -> . datatype list_id PUNTO
    (6) sentence -> . control_statement PUNTO
    (7) sentence -> . assignment_statement PUNTO
    (8) sentence -> . system_function_call_statement PUNTO
    (43) datatype -> . ENTERO
    (44) datatype -> . CADENA
    (45) datatype -> . REAL
    (46) datatype -> . BOOLEANO
    (11) control_statement -> . if_statement
    (12) control_statement -> . while_statement
    (16) assignment_statement -> . IDENTIF IGUAL expression
    (17) assignment_statement -> . IDENTIF IGUAL special_expression
    (18) assignment_statement -> . IDENTIF IGUAL CADENA_VALOR
    (19) system_function_call_statement -> . IMPRIMIR PARIZ list_arg PARDE
    (20) system_function_call_statement -> . LEER PARIZ list_id PARDE
    (13) if_statement -> . CUANDO expression ENTONCES list_sentences LISTO
    (14) if_statement -> . CUANDO expression ENTONCES list_sentences SINO list_sentences LISTO
    (15) while_statement -> . MIENTRAS expression ENTONCES list_sentences LISTO

    LISTO           shift and go to state 102
    ENTERO          shift and go to state 10
    CADENA          shift and go to state 11
    REAL            shift and go to state 12
    BOOLEANO        shift and go to state 13
    IDENTIF         shift and go to state 16
    IMPRIMIR        shift and go to state 17
    LEER            shift and go to state 18
    CUANDO          shift and go to state 19
    MIENTRAS        shift and go to state 20

    sentence                       shift and go to state 22
    datatype                       shift and go to state 6
    control_statement              shift and go to state 7
    assignment_statement           shift and go to state 8
    system_function_call_statement shift and go to state 9
    if_statement                   shift and go to state 14
    while_statement                shift and go to state 15

state 95

    (57) special_expression -> IDENTIF IDENTIF operator .

    PUNTO           reduce using rule 57 (special_expression -> IDENTIF IDENTIF operator .)
    CIERRA_RPN      reduce using rule 57 (special_expression -> IDENTIF IDENTIF operator .)


state 96

    (60) special_expression -> IDENTIF NUMERO operator .

    PUNTO           reduce using rule 60 (special_expression -> IDENTIF NUMERO operator .)
    CIERRA_RPN      reduce using rule 60 (special_expression -> IDENTIF NUMERO operator .)


state 97

    (58) special_expression -> NUMERO NUMERO operator .

    PUNTO           reduce using rule 58 (special_expression -> NUMERO NUMERO operator .)
    CIERRA_RPN      reduce using rule 58 (special_expression -> NUMERO NUMERO operator .)


state 98

    (59) special_expression -> NUMERO IDENTIF operator .

    PUNTO           reduce using rule 59 (special_expression -> NUMERO IDENTIF operator .)
    CIERRA_RPN      reduce using rule 59 (special_expression -> NUMERO IDENTIF operator .)


state 99

    (21) list_arg -> list_arg COMA arg .

    PARDE           reduce using rule 21 (list_arg -> list_arg COMA arg .)
    COMA            reduce using rule 21 (list_arg -> list_arg COMA arg .)


state 100

    (13) if_statement -> CUANDO expression ENTONCES list_sentences LISTO .

    PUNTO           reduce using rule 13 (if_statement -> CUANDO expression ENTONCES list_sentences LISTO .)


state 101

    (14) if_statement -> CUANDO expression ENTONCES list_sentences SINO . list_sentences LISTO
    (2) list_sentences -> .
    (3) list_sentences -> . list_sentences sentence
    (4) list_sentences -> . sentence
    (5) sentence -> . datatype list_id PUNTO
    (6) sentence -> . control_statement PUNTO
    (7) sentence -> . assignment_statement PUNTO
    (8) sentence -> . system_function_call_statement PUNTO
    (43) datatype -> . ENTERO
    (44) datatype -> . CADENA
    (45) datatype -> . REAL
    (46) datatype -> . BOOLEANO
    (11) control_statement -> . if_statement
    (12) control_statement -> . while_statement
    (16) assignment_statement -> . IDENTIF IGUAL expression
    (17) assignment_statement -> . IDENTIF IGUAL special_expression
    (18) assignment_statement -> . IDENTIF IGUAL CADENA_VALOR
    (19) system_function_call_statement -> . IMPRIMIR PARIZ list_arg PARDE
    (20) system_function_call_statement -> . LEER PARIZ list_id PARDE
    (13) if_statement -> . CUANDO expression ENTONCES list_sentences LISTO
    (14) if_statement -> . CUANDO expression ENTONCES list_sentences SINO list_sentences LISTO
    (15) while_statement -> . MIENTRAS expression ENTONCES list_sentences LISTO

  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for BOOLEANO resolved as shift
  ! shift/reduce conflict for IDENTIF resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
    LISTO           reduce using rule 2 (list_sentences -> .)
    ENTERO          shift and go to state 10
    CADENA          shift and go to state 11
    REAL            shift and go to state 12
    BOOLEANO        shift and go to state 13
    IDENTIF         shift and go to state 16
    IMPRIMIR        shift and go to state 17
    LEER            shift and go to state 18
    CUANDO          shift and go to state 19
    MIENTRAS        shift and go to state 20

  ! ENTERO          [ reduce using rule 2 (list_sentences -> .) ]
  ! CADENA          [ reduce using rule 2 (list_sentences -> .) ]
  ! REAL            [ reduce using rule 2 (list_sentences -> .) ]
  ! BOOLEANO        [ reduce using rule 2 (list_sentences -> .) ]
  ! IDENTIF         [ reduce using rule 2 (list_sentences -> .) ]
  ! IMPRIMIR        [ reduce using rule 2 (list_sentences -> .) ]
  ! LEER            [ reduce using rule 2 (list_sentences -> .) ]
  ! CUANDO          [ reduce using rule 2 (list_sentences -> .) ]
  ! MIENTRAS        [ reduce using rule 2 (list_sentences -> .) ]

    list_sentences                 shift and go to state 103
    sentence                       shift and go to state 5
    datatype                       shift and go to state 6
    control_statement              shift and go to state 7
    assignment_statement           shift and go to state 8
    system_function_call_statement shift and go to state 9
    if_statement                   shift and go to state 14
    while_statement                shift and go to state 15

state 102

    (15) while_statement -> MIENTRAS expression ENTONCES list_sentences LISTO .

    PUNTO           reduce using rule 15 (while_statement -> MIENTRAS expression ENTONCES list_sentences LISTO .)


state 103

    (14) if_statement -> CUANDO expression ENTONCES list_sentences SINO list_sentences . LISTO
    (3) list_sentences -> list_sentences . sentence
    (5) sentence -> . datatype list_id PUNTO
    (6) sentence -> . control_statement PUNTO
    (7) sentence -> . assignment_statement PUNTO
    (8) sentence -> . system_function_call_statement PUNTO
    (43) datatype -> . ENTERO
    (44) datatype -> . CADENA
    (45) datatype -> . REAL
    (46) datatype -> . BOOLEANO
    (11) control_statement -> . if_statement
    (12) control_statement -> . while_statement
    (16) assignment_statement -> . IDENTIF IGUAL expression
    (17) assignment_statement -> . IDENTIF IGUAL special_expression
    (18) assignment_statement -> . IDENTIF IGUAL CADENA_VALOR
    (19) system_function_call_statement -> . IMPRIMIR PARIZ list_arg PARDE
    (20) system_function_call_statement -> . LEER PARIZ list_id PARDE
    (13) if_statement -> . CUANDO expression ENTONCES list_sentences LISTO
    (14) if_statement -> . CUANDO expression ENTONCES list_sentences SINO list_sentences LISTO
    (15) while_statement -> . MIENTRAS expression ENTONCES list_sentences LISTO

    LISTO           shift and go to state 104
    ENTERO          shift and go to state 10
    CADENA          shift and go to state 11
    REAL            shift and go to state 12
    BOOLEANO        shift and go to state 13
    IDENTIF         shift and go to state 16
    IMPRIMIR        shift and go to state 17
    LEER            shift and go to state 18
    CUANDO          shift and go to state 19
    MIENTRAS        shift and go to state 20

    sentence                       shift and go to state 22
    datatype                       shift and go to state 6
    control_statement              shift and go to state 7
    assignment_statement           shift and go to state 8
    system_function_call_statement shift and go to state 9
    if_statement                   shift and go to state 14
    while_statement                shift and go to state 15

state 104

    (14) if_statement -> CUANDO expression ENTONCES list_sentences SINO list_sentences LISTO .

    PUNTO           reduce using rule 14 (if_statement -> CUANDO expression ENTONCES list_sentences SINO list_sentences LISTO .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ENTERO in state 3 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 3 resolved as shift
WARNING: shift/reduce conflict for REAL in state 3 resolved as shift
WARNING: shift/reduce conflict for BOOLEANO in state 3 resolved as shift
WARNING: shift/reduce conflict for IDENTIF in state 3 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 3 resolved as shift
WARNING: shift/reduce conflict for LEER in state 3 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 3 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 3 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 56 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 56 resolved as shift
WARNING: shift/reduce conflict for REAL in state 56 resolved as shift
WARNING: shift/reduce conflict for BOOLEANO in state 56 resolved as shift
WARNING: shift/reduce conflict for IDENTIF in state 56 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 56 resolved as shift
WARNING: shift/reduce conflict for LEER in state 56 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 56 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 56 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 81 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 81 resolved as shift
WARNING: shift/reduce conflict for REAL in state 81 resolved as shift
WARNING: shift/reduce conflict for BOOLEANO in state 81 resolved as shift
WARNING: shift/reduce conflict for IDENTIF in state 81 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 81 resolved as shift
WARNING: shift/reduce conflict for LEER in state 81 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 81 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 81 resolved as shift
WARNING: shift/reduce conflict for MAS in state 91 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 91 resolved as shift
WARNING: shift/reduce conflict for POR in state 91 resolved as shift
WARNING: shift/reduce conflict for ENTRE in state 91 resolved as shift
WARNING: shift/reduce conflict for O in state 91 resolved as shift
WARNING: shift/reduce conflict for Y in state 91 resolved as shift
WARNING: shift/reduce conflict for NO in state 91 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 91 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 91 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 91 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 91 resolved as shift
WARNING: shift/reduce conflict for EQUIVALE in state 91 resolved as shift
WARNING: shift/reduce conflict for DIFIERE in state 91 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 101 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 101 resolved as shift
WARNING: shift/reduce conflict for REAL in state 101 resolved as shift
WARNING: shift/reduce conflict for BOOLEANO in state 101 resolved as shift
WARNING: shift/reduce conflict for IDENTIF in state 101 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 101 resolved as shift
WARNING: shift/reduce conflict for LEER in state 101 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 101 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 101 resolved as shift
WARNING: reduce/reduce conflict in state 52 resolved using rule (arg -> IDENTIF)
WARNING: rejected rule (expression -> IDENTIF) in state 52
